//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/DATA/Diyalog/sdk-core/core/core-shared/src/main/java/im/diyalog/core/api/rpc/RequestCompleteOAuth2.java
//

@import j2objc;

#pragma push_macro("INCLUDE_ALL_ImDiyalogCoreApiRpcRequestCompleteOAuth2")
#ifdef RESTRICT_ImDiyalogCoreApiRpcRequestCompleteOAuth2
#define INCLUDE_ALL_ImDiyalogCoreApiRpcRequestCompleteOAuth2 0
#else
#define INCLUDE_ALL_ImDiyalogCoreApiRpcRequestCompleteOAuth2 1
#endif
#undef RESTRICT_ImDiyalogCoreApiRpcRequestCompleteOAuth2

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if !defined (ARRequestCompleteOAuth2_) && (INCLUDE_ALL_ImDiyalogCoreApiRpcRequestCompleteOAuth2 || defined(INCLUDE_ARRequestCompleteOAuth2))
#define ARRequestCompleteOAuth2_

#define RESTRICT_ImDiyalogCoreNetworkParserRequest 1
#define INCLUDE_ACRequest 1
#include "../../../../../im/diyalog/core/network/parser/Request.h"

@class ARBserValues;
@class ARBserWriter;
@class IOSByteArray;

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

@interface ARRequestCompleteOAuth2 : ACRequest

+ (jint)HEADER;

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithNSString:(NSString * __nonnull)transactionHash
                    withNSString:(NSString * __nonnull)code;

+ (ARRequestCompleteOAuth2 *)fromBytesWithByteArray:(IOSByteArray *)data;

- (NSString * __nonnull)getCode;

- (jint)getHeaderKey;

- (NSString * __nonnull)getTransactionHash;

- (void)parseWithARBserValues:(ARBserValues *)values;

- (void)serializeWithARBserWriter:(ARBserWriter *)writer;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(ARRequestCompleteOAuth2)

inline jint ARRequestCompleteOAuth2_get_HEADER();
#define ARRequestCompleteOAuth2_HEADER 196
J2OBJC_STATIC_FIELD_CONSTANT(ARRequestCompleteOAuth2, HEADER, jint)

FOUNDATION_EXPORT ARRequestCompleteOAuth2 *ARRequestCompleteOAuth2_fromBytesWithByteArray_(IOSByteArray *data);

FOUNDATION_EXPORT void ARRequestCompleteOAuth2_initWithNSString_withNSString_(ARRequestCompleteOAuth2 *self, NSString *transactionHash, NSString *code);

FOUNDATION_EXPORT ARRequestCompleteOAuth2 *new_ARRequestCompleteOAuth2_initWithNSString_withNSString_(NSString *transactionHash, NSString *code) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ARRequestCompleteOAuth2 *create_ARRequestCompleteOAuth2_initWithNSString_withNSString_(NSString *transactionHash, NSString *code);

FOUNDATION_EXPORT void ARRequestCompleteOAuth2_init(ARRequestCompleteOAuth2 *self);

FOUNDATION_EXPORT ARRequestCompleteOAuth2 *new_ARRequestCompleteOAuth2_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ARRequestCompleteOAuth2 *create_ARRequestCompleteOAuth2_init();

J2OBJC_TYPE_LITERAL_HEADER(ARRequestCompleteOAuth2)

@compatibility_alias ImDiyalogCoreApiRpcRequestCompleteOAuth2 ARRequestCompleteOAuth2;

#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#endif


#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_ImDiyalogCoreApiRpcRequestCompleteOAuth2")
