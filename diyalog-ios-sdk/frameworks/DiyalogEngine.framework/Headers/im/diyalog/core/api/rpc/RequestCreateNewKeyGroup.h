//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/DATA/Diyalog/sdk-core/core/core-shared/src/main/java/im/diyalog/core/api/rpc/RequestCreateNewKeyGroup.java
//

@import j2objc;

#pragma push_macro("INCLUDE_ALL_ImDiyalogCoreApiRpcRequestCreateNewKeyGroup")
#ifdef RESTRICT_ImDiyalogCoreApiRpcRequestCreateNewKeyGroup
#define INCLUDE_ALL_ImDiyalogCoreApiRpcRequestCreateNewKeyGroup 0
#else
#define INCLUDE_ALL_ImDiyalogCoreApiRpcRequestCreateNewKeyGroup 1
#endif
#undef RESTRICT_ImDiyalogCoreApiRpcRequestCreateNewKeyGroup

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if !defined (ARRequestCreateNewKeyGroup_) && (INCLUDE_ALL_ImDiyalogCoreApiRpcRequestCreateNewKeyGroup || defined(INCLUDE_ARRequestCreateNewKeyGroup))
#define ARRequestCreateNewKeyGroup_

#define RESTRICT_ImDiyalogCoreNetworkParserRequest 1
#define INCLUDE_ACRequest 1
#include "../../../../../im/diyalog/core/network/parser/Request.h"

@class ARApiEncryptionKey;
@class ARBserValues;
@class ARBserWriter;
@class IOSByteArray;
@protocol JavaUtilList;

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

@interface ARRequestCreateNewKeyGroup : ACRequest

+ (jint)HEADER;

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithARApiEncryptionKey:(ARApiEncryptionKey * __nonnull)identityKey
                          withJavaUtilList:(id<JavaUtilList> __nonnull)supportedEncryptions
                          withJavaUtilList:(id<JavaUtilList> __nonnull)keys
                          withJavaUtilList:(id<JavaUtilList> __nonnull)signatures;

+ (ARRequestCreateNewKeyGroup *)fromBytesWithByteArray:(IOSByteArray *)data;

- (jint)getHeaderKey;

- (ARApiEncryptionKey * __nonnull)getIdentityKey;

- (id<JavaUtilList> __nonnull)getKeys;

- (id<JavaUtilList> __nonnull)getSignatures;

- (id<JavaUtilList> __nonnull)getSupportedEncryptions;

- (void)parseWithARBserValues:(ARBserValues *)values;

- (void)serializeWithARBserWriter:(ARBserWriter *)writer;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(ARRequestCreateNewKeyGroup)

inline jint ARRequestCreateNewKeyGroup_get_HEADER();
#define ARRequestCreateNewKeyGroup_HEADER 2609
J2OBJC_STATIC_FIELD_CONSTANT(ARRequestCreateNewKeyGroup, HEADER, jint)

FOUNDATION_EXPORT ARRequestCreateNewKeyGroup *ARRequestCreateNewKeyGroup_fromBytesWithByteArray_(IOSByteArray *data);

FOUNDATION_EXPORT void ARRequestCreateNewKeyGroup_initWithARApiEncryptionKey_withJavaUtilList_withJavaUtilList_withJavaUtilList_(ARRequestCreateNewKeyGroup *self, ARApiEncryptionKey *identityKey, id<JavaUtilList> supportedEncryptions, id<JavaUtilList> keys, id<JavaUtilList> signatures);

FOUNDATION_EXPORT ARRequestCreateNewKeyGroup *new_ARRequestCreateNewKeyGroup_initWithARApiEncryptionKey_withJavaUtilList_withJavaUtilList_withJavaUtilList_(ARApiEncryptionKey *identityKey, id<JavaUtilList> supportedEncryptions, id<JavaUtilList> keys, id<JavaUtilList> signatures) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ARRequestCreateNewKeyGroup *create_ARRequestCreateNewKeyGroup_initWithARApiEncryptionKey_withJavaUtilList_withJavaUtilList_withJavaUtilList_(ARApiEncryptionKey *identityKey, id<JavaUtilList> supportedEncryptions, id<JavaUtilList> keys, id<JavaUtilList> signatures);

FOUNDATION_EXPORT void ARRequestCreateNewKeyGroup_init(ARRequestCreateNewKeyGroup *self);

FOUNDATION_EXPORT ARRequestCreateNewKeyGroup *new_ARRequestCreateNewKeyGroup_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ARRequestCreateNewKeyGroup *create_ARRequestCreateNewKeyGroup_init();

J2OBJC_TYPE_LITERAL_HEADER(ARRequestCreateNewKeyGroup)

@compatibility_alias ImDiyalogCoreApiRpcRequestCreateNewKeyGroup ARRequestCreateNewKeyGroup;

#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#endif


#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_ImDiyalogCoreApiRpcRequestCreateNewKeyGroup")
