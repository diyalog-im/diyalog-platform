//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/DATA/Diyalog/sdk-core/core/core-shared/src/main/java/im/diyalog/core/api/rpc/RequestStartAnonymousAuthForFaq.java
//

@import j2objc;

#pragma push_macro("INCLUDE_ALL_ImDiyalogCoreApiRpcRequestStartAnonymousAuthForFaq")
#ifdef RESTRICT_ImDiyalogCoreApiRpcRequestStartAnonymousAuthForFaq
#define INCLUDE_ALL_ImDiyalogCoreApiRpcRequestStartAnonymousAuthForFaq 0
#else
#define INCLUDE_ALL_ImDiyalogCoreApiRpcRequestStartAnonymousAuthForFaq 1
#endif
#undef RESTRICT_ImDiyalogCoreApiRpcRequestStartAnonymousAuthForFaq

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if !defined (ARRequestStartAnonymousAuthForFaq_) && (INCLUDE_ALL_ImDiyalogCoreApiRpcRequestStartAnonymousAuthForFaq || defined(INCLUDE_ARRequestStartAnonymousAuthForFaq))
#define ARRequestStartAnonymousAuthForFaq_

#define RESTRICT_ImDiyalogCoreNetworkParserRequest 1
#define INCLUDE_ACRequest 1
#include "../../../../../im/diyalog/core/network/parser/Request.h"

@class ARBserValues;
@class ARBserWriter;
@class IOSByteArray;
@protocol JavaUtilList;

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

@interface ARRequestStartAnonymousAuthForFaq : ACRequest

+ (jint)HEADER;

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithInt:(jint)appId
               withNSString:(NSString * __nonnull)apiKey
              withByteArray:(IOSByteArray * __nonnull)deviceHash
               withNSString:(NSString * __nonnull)deviceTitle
               withNSString:(NSString * __nullable)timeZone
           withJavaUtilList:(id<JavaUtilList> __nonnull)preferredLanguages;

+ (ARRequestStartAnonymousAuthForFaq *)fromBytesWithByteArray:(IOSByteArray *)data;

- (NSString * __nonnull)getApiKey;

- (jint)getAppId;

- (IOSByteArray * __nonnull)getDeviceHash;

- (NSString * __nonnull)getDeviceTitle;

- (jint)getHeaderKey;

- (id<JavaUtilList> __nonnull)getPreferredLanguages;

- (NSString * __nullable)getTimeZone;

- (void)parseWithARBserValues:(ARBserValues *)values;

- (void)serializeWithARBserWriter:(ARBserWriter *)writer;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(ARRequestStartAnonymousAuthForFaq)

inline jint ARRequestStartAnonymousAuthForFaq_get_HEADER();
#define ARRequestStartAnonymousAuthForFaq_HEADER 290
J2OBJC_STATIC_FIELD_CONSTANT(ARRequestStartAnonymousAuthForFaq, HEADER, jint)

FOUNDATION_EXPORT ARRequestStartAnonymousAuthForFaq *ARRequestStartAnonymousAuthForFaq_fromBytesWithByteArray_(IOSByteArray *data);

FOUNDATION_EXPORT void ARRequestStartAnonymousAuthForFaq_initWithInt_withNSString_withByteArray_withNSString_withNSString_withJavaUtilList_(ARRequestStartAnonymousAuthForFaq *self, jint appId, NSString *apiKey, IOSByteArray *deviceHash, NSString *deviceTitle, NSString *timeZone, id<JavaUtilList> preferredLanguages);

FOUNDATION_EXPORT ARRequestStartAnonymousAuthForFaq *new_ARRequestStartAnonymousAuthForFaq_initWithInt_withNSString_withByteArray_withNSString_withNSString_withJavaUtilList_(jint appId, NSString *apiKey, IOSByteArray *deviceHash, NSString *deviceTitle, NSString *timeZone, id<JavaUtilList> preferredLanguages) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ARRequestStartAnonymousAuthForFaq *create_ARRequestStartAnonymousAuthForFaq_initWithInt_withNSString_withByteArray_withNSString_withNSString_withJavaUtilList_(jint appId, NSString *apiKey, IOSByteArray *deviceHash, NSString *deviceTitle, NSString *timeZone, id<JavaUtilList> preferredLanguages);

FOUNDATION_EXPORT void ARRequestStartAnonymousAuthForFaq_init(ARRequestStartAnonymousAuthForFaq *self);

FOUNDATION_EXPORT ARRequestStartAnonymousAuthForFaq *new_ARRequestStartAnonymousAuthForFaq_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ARRequestStartAnonymousAuthForFaq *create_ARRequestStartAnonymousAuthForFaq_init();

J2OBJC_TYPE_LITERAL_HEADER(ARRequestStartAnonymousAuthForFaq)

@compatibility_alias ImDiyalogCoreApiRpcRequestStartAnonymousAuthForFaq ARRequestStartAnonymousAuthForFaq;

#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#endif


#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_ImDiyalogCoreApiRpcRequestStartAnonymousAuthForFaq")
