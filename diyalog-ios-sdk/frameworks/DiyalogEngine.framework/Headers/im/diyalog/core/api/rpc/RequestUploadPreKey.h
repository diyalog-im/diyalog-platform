//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/DATA/Diyalog/sdk-core/core/core-shared/src/main/java/im/diyalog/core/api/rpc/RequestUploadPreKey.java
//

@import j2objc;

#pragma push_macro("INCLUDE_ALL_ImDiyalogCoreApiRpcRequestUploadPreKey")
#ifdef RESTRICT_ImDiyalogCoreApiRpcRequestUploadPreKey
#define INCLUDE_ALL_ImDiyalogCoreApiRpcRequestUploadPreKey 0
#else
#define INCLUDE_ALL_ImDiyalogCoreApiRpcRequestUploadPreKey 1
#endif
#undef RESTRICT_ImDiyalogCoreApiRpcRequestUploadPreKey

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if !defined (ARRequestUploadPreKey_) && (INCLUDE_ALL_ImDiyalogCoreApiRpcRequestUploadPreKey || defined(INCLUDE_ARRequestUploadPreKey))
#define ARRequestUploadPreKey_

#define RESTRICT_ImDiyalogCoreNetworkParserRequest 1
#define INCLUDE_ACRequest 1
#include "../../../../../im/diyalog/core/network/parser/Request.h"

@class ARBserValues;
@class ARBserWriter;
@class IOSByteArray;
@protocol JavaUtilList;

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

@interface ARRequestUploadPreKey : ACRequest

+ (jint)HEADER;

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithInt:(jint)keyGroupId
           withJavaUtilList:(id<JavaUtilList> __nonnull)keys
           withJavaUtilList:(id<JavaUtilList> __nonnull)signatures;

+ (ARRequestUploadPreKey *)fromBytesWithByteArray:(IOSByteArray *)data;

- (jint)getHeaderKey;

- (jint)getKeyGroupId;

- (id<JavaUtilList> __nonnull)getKeys;

- (id<JavaUtilList> __nonnull)getSignatures;

- (void)parseWithARBserValues:(ARBserValues *)values;

- (void)serializeWithARBserWriter:(ARBserWriter *)writer;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(ARRequestUploadPreKey)

inline jint ARRequestUploadPreKey_get_HEADER();
#define ARRequestUploadPreKey_HEADER 2612
J2OBJC_STATIC_FIELD_CONSTANT(ARRequestUploadPreKey, HEADER, jint)

FOUNDATION_EXPORT ARRequestUploadPreKey *ARRequestUploadPreKey_fromBytesWithByteArray_(IOSByteArray *data);

FOUNDATION_EXPORT void ARRequestUploadPreKey_initWithInt_withJavaUtilList_withJavaUtilList_(ARRequestUploadPreKey *self, jint keyGroupId, id<JavaUtilList> keys, id<JavaUtilList> signatures);

FOUNDATION_EXPORT ARRequestUploadPreKey *new_ARRequestUploadPreKey_initWithInt_withJavaUtilList_withJavaUtilList_(jint keyGroupId, id<JavaUtilList> keys, id<JavaUtilList> signatures) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ARRequestUploadPreKey *create_ARRequestUploadPreKey_initWithInt_withJavaUtilList_withJavaUtilList_(jint keyGroupId, id<JavaUtilList> keys, id<JavaUtilList> signatures);

FOUNDATION_EXPORT void ARRequestUploadPreKey_init(ARRequestUploadPreKey *self);

FOUNDATION_EXPORT ARRequestUploadPreKey *new_ARRequestUploadPreKey_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ARRequestUploadPreKey *create_ARRequestUploadPreKey_init();

J2OBJC_TYPE_LITERAL_HEADER(ARRequestUploadPreKey)

@compatibility_alias ImDiyalogCoreApiRpcRequestUploadPreKey ARRequestUploadPreKey;

#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#endif


#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_ImDiyalogCoreApiRpcRequestUploadPreKey")
