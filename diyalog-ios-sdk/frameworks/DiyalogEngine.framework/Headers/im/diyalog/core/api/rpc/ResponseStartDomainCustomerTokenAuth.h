//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/DATA/Diyalog/sdk-core/core/core-shared/src/main/java/im/diyalog/core/api/rpc/ResponseStartDomainCustomerTokenAuth.java
//

@import j2objc;

#pragma push_macro("INCLUDE_ALL_ImDiyalogCoreApiRpcResponseStartDomainCustomerTokenAuth")
#ifdef RESTRICT_ImDiyalogCoreApiRpcResponseStartDomainCustomerTokenAuth
#define INCLUDE_ALL_ImDiyalogCoreApiRpcResponseStartDomainCustomerTokenAuth 0
#else
#define INCLUDE_ALL_ImDiyalogCoreApiRpcResponseStartDomainCustomerTokenAuth 1
#endif
#undef RESTRICT_ImDiyalogCoreApiRpcResponseStartDomainCustomerTokenAuth

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if !defined (ARResponseStartDomainCustomerTokenAuth_) && (INCLUDE_ALL_ImDiyalogCoreApiRpcResponseStartDomainCustomerTokenAuth || defined(INCLUDE_ARResponseStartDomainCustomerTokenAuth))
#define ARResponseStartDomainCustomerTokenAuth_

#define RESTRICT_ImDiyalogCoreNetworkParserResponse 1
#define INCLUDE_ACResponse 1
#include "../../../../../im/diyalog/core/network/parser/Response.h"

@class ARBserValues;
@class ARBserWriter;
@class IOSByteArray;

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

@interface ARResponseStartDomainCustomerTokenAuth : ACResponse

+ (jint)HEADER;

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithNSString:(NSString * __nonnull)transactionHash
                     withBoolean:(jboolean)isRegistered;

+ (ARResponseStartDomainCustomerTokenAuth *)fromBytesWithByteArray:(IOSByteArray *)data;

- (jint)getHeaderKey;

- (NSString * __nonnull)getTransactionHash;

- (jboolean)isRegistered;

- (void)parseWithARBserValues:(ARBserValues *)values;

- (void)serializeWithARBserWriter:(ARBserWriter *)writer;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(ARResponseStartDomainCustomerTokenAuth)

inline jint ARResponseStartDomainCustomerTokenAuth_get_HEADER();
#define ARResponseStartDomainCustomerTokenAuth_HEADER 308
J2OBJC_STATIC_FIELD_CONSTANT(ARResponseStartDomainCustomerTokenAuth, HEADER, jint)

FOUNDATION_EXPORT ARResponseStartDomainCustomerTokenAuth *ARResponseStartDomainCustomerTokenAuth_fromBytesWithByteArray_(IOSByteArray *data);

FOUNDATION_EXPORT void ARResponseStartDomainCustomerTokenAuth_initWithNSString_withBoolean_(ARResponseStartDomainCustomerTokenAuth *self, NSString *transactionHash, jboolean isRegistered);

FOUNDATION_EXPORT ARResponseStartDomainCustomerTokenAuth *new_ARResponseStartDomainCustomerTokenAuth_initWithNSString_withBoolean_(NSString *transactionHash, jboolean isRegistered) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ARResponseStartDomainCustomerTokenAuth *create_ARResponseStartDomainCustomerTokenAuth_initWithNSString_withBoolean_(NSString *transactionHash, jboolean isRegistered);

FOUNDATION_EXPORT void ARResponseStartDomainCustomerTokenAuth_init(ARResponseStartDomainCustomerTokenAuth *self);

FOUNDATION_EXPORT ARResponseStartDomainCustomerTokenAuth *new_ARResponseStartDomainCustomerTokenAuth_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ARResponseStartDomainCustomerTokenAuth *create_ARResponseStartDomainCustomerTokenAuth_init();

J2OBJC_TYPE_LITERAL_HEADER(ARResponseStartDomainCustomerTokenAuth)

@compatibility_alias ImDiyalogCoreApiRpcResponseStartDomainCustomerTokenAuth ARResponseStartDomainCustomerTokenAuth;

#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#endif


#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_ImDiyalogCoreApiRpcResponseStartDomainCustomerTokenAuth")
