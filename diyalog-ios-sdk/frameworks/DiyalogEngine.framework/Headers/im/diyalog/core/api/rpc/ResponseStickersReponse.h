//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/DATA/Diyalog/sdk-core/core/core-shared/src/main/java/im/diyalog/core/api/rpc/ResponseStickersReponse.java
//

@import j2objc;

#pragma push_macro("INCLUDE_ALL_ImDiyalogCoreApiRpcResponseStickersReponse")
#ifdef RESTRICT_ImDiyalogCoreApiRpcResponseStickersReponse
#define INCLUDE_ALL_ImDiyalogCoreApiRpcResponseStickersReponse 0
#else
#define INCLUDE_ALL_ImDiyalogCoreApiRpcResponseStickersReponse 1
#endif
#undef RESTRICT_ImDiyalogCoreApiRpcResponseStickersReponse

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if !defined (ARResponseStickersReponse_) && (INCLUDE_ALL_ImDiyalogCoreApiRpcResponseStickersReponse || defined(INCLUDE_ARResponseStickersReponse))
#define ARResponseStickersReponse_

#define RESTRICT_ImDiyalogCoreNetworkParserResponse 1
#define INCLUDE_ACResponse 1
#include "../../../../../im/diyalog/core/network/parser/Response.h"

@class ARBserValues;
@class ARBserWriter;
@class IOSByteArray;
@protocol JavaUtilList;

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

@interface ARResponseStickersReponse : ACResponse

+ (jint)HEADER;

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithJavaUtilList:(id<JavaUtilList> __nonnull)collections
                             withInt:(jint)seq
                       withByteArray:(IOSByteArray * __nonnull)state;

+ (ARResponseStickersReponse *)fromBytesWithByteArray:(IOSByteArray *)data;

- (id<JavaUtilList> __nonnull)getCollections;

- (jint)getHeaderKey;

- (jint)getSeq;

- (IOSByteArray * __nonnull)getState;

- (void)parseWithARBserValues:(ARBserValues *)values;

- (void)serializeWithARBserWriter:(ARBserWriter *)writer;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(ARResponseStickersReponse)

inline jint ARResponseStickersReponse_get_HEADER();
#define ARResponseStickersReponse_HEADER 240
J2OBJC_STATIC_FIELD_CONSTANT(ARResponseStickersReponse, HEADER, jint)

FOUNDATION_EXPORT ARResponseStickersReponse *ARResponseStickersReponse_fromBytesWithByteArray_(IOSByteArray *data);

FOUNDATION_EXPORT void ARResponseStickersReponse_initWithJavaUtilList_withInt_withByteArray_(ARResponseStickersReponse *self, id<JavaUtilList> collections, jint seq, IOSByteArray *state);

FOUNDATION_EXPORT ARResponseStickersReponse *new_ARResponseStickersReponse_initWithJavaUtilList_withInt_withByteArray_(id<JavaUtilList> collections, jint seq, IOSByteArray *state) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ARResponseStickersReponse *create_ARResponseStickersReponse_initWithJavaUtilList_withInt_withByteArray_(id<JavaUtilList> collections, jint seq, IOSByteArray *state);

FOUNDATION_EXPORT void ARResponseStickersReponse_init(ARResponseStickersReponse *self);

FOUNDATION_EXPORT ARResponseStickersReponse *new_ARResponseStickersReponse_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ARResponseStickersReponse *create_ARResponseStickersReponse_init();

J2OBJC_TYPE_LITERAL_HEADER(ARResponseStickersReponse)

@compatibility_alias ImDiyalogCoreApiRpcResponseStickersReponse ARResponseStickersReponse;

#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#endif


#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_ImDiyalogCoreApiRpcResponseStickersReponse")
