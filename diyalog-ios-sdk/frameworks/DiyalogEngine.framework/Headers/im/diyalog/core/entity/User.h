//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/DATA/Diyalog/sdk-core/core/core-shared/src/main/java/im/diyalog/core/entity/User.java
//

@import j2objc;

#pragma push_macro("INCLUDE_ALL_ImDiyalogCoreEntityUser")
#ifdef RESTRICT_ImDiyalogCoreEntityUser
#define INCLUDE_ALL_ImDiyalogCoreEntityUser 0
#else
#define INCLUDE_ALL_ImDiyalogCoreEntityUser 1
#endif
#undef RESTRICT_ImDiyalogCoreEntityUser

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if !defined (ACUser_) && (INCLUDE_ALL_ImDiyalogCoreEntityUser || defined(INCLUDE_ACUser))
#define ACUser_

#define RESTRICT_ImDiyalogCoreEntityWrapperEntity 1
#define INCLUDE_ACWrapperEntity 1
#include "../../../../im/diyalog/core/entity/WrapperEntity.h"

#define RESTRICT_ImDiyalogRuntimeStorageKeyValueItem 1
#define INCLUDE_ARKeyValueItem 1
#include "../../../../im/diyalog/runtime/storage/KeyValueItem.h"

@class ACAvatar;
@class ACPeer;
@class ACSex;
@class ACUserType;
@class ARApiAvatar;
@class ARApiUser;
@class ARBserValues;
@class ARBserWriter;
@class IOSByteArray;
@protocol ARBserCreator;
@protocol JavaUtilList;

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

@interface ACUser : ACWrapperEntity < ARKeyValueItem >
@property (readonly, nonatomic, getter=getUid) jint uid;
@property (readonly, nonatomic, getter=getAccessHash) jlong accessHash;
@property (readonly, copy, nonatomic, getter=getName) NSString *name;
@property (readonly, copy, nonatomic, getter=getLocalName) NSString *localName;
@property (readonly, copy, nonatomic) NSString *username;
@property (readonly, copy, nonatomic, getter=getAbout) NSString *about;
@property (readonly, nonatomic, getter=getAvatar) ACAvatar *avatar;
@property (readonly, nonatomic, getter=getSex) ACSex *sex;
@property (readonly, nonatomic, getter=isBot) jboolean isBot;
@property (readonly, nonatomic, getter=getRecords) id<JavaUtilList> records;
@property (readonly, nonatomic, getter=isAnonymous) jboolean isAnonymous;
@property (readonly, nonatomic, getter=getUserType) ACUserType *userType;

+ (id<ARBserCreator>)CREATOR;

+ (void)setCREATOR:(id<ARBserCreator>)value;

#pragma mark Public

- (instancetype)initWithARApiUser:(ARApiUser * __nonnull)wrappedUser;

- (instancetype)initWithByteArray:(IOSByteArray * __nonnull)data;

- (ACUser *)editAboutWithNSString:(NSString * __nullable)about;

- (ACUser *)editAvatarWithARApiAvatar:(ARApiAvatar * __nullable)avatar;

- (ACUser *)editLocalNameWithNSString:(NSString * __nonnull)localName;

- (ACUser *)editNameWithNSString:(NSString * __nonnull)name;

- (ACUser *)editNickWithNSString:(NSString * __nullable)nick;

- (NSString * __nullable)getAbout;

- (jlong)getAccessHash;

- (ACAvatar * __nullable)getAvatar;

- (jlong)getEngineId;

- (NSString * __nullable)getLocalName;

- (NSString * __nonnull)getName;

- (NSString * __nullable)getNick;

- (id<JavaUtilList> __nonnull)getRecords;

- (NSString * __nonnull)getServerName;

- (ACSex * __nonnull)getSex;

- (jint)getUid;

- (ACUserType * __nonnull)getUserType;

- (jboolean)isAnonymous;

- (jboolean)isBot;

- (void)parseWithARBserValues:(ARBserValues *)values;

- (ACPeer * __nonnull)peer;

- (void)serializeWithARBserWriter:(ARBserWriter *)writer;

#pragma mark Protected

- (void)applyWrappedWithARBserObject:(ARApiUser * __nonnull)wrapped;

- (ARApiUser * __nonnull)createInstance;

@end

J2OBJC_STATIC_INIT(ACUser)

inline id<ARBserCreator> ACUser_get_CREATOR();
inline id<ARBserCreator> ACUser_set_CREATOR(id<ARBserCreator> value);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<ARBserCreator> ACUser_CREATOR;
J2OBJC_STATIC_FIELD_OBJ(ACUser, CREATOR, id<ARBserCreator>)

FOUNDATION_EXPORT void ACUser_initWithARApiUser_(ACUser *self, ARApiUser *wrappedUser);

FOUNDATION_EXPORT ACUser *new_ACUser_initWithARApiUser_(ARApiUser *wrappedUser) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ACUser *create_ACUser_initWithARApiUser_(ARApiUser *wrappedUser);

FOUNDATION_EXPORT void ACUser_initWithByteArray_(ACUser *self, IOSByteArray *data);

FOUNDATION_EXPORT ACUser *new_ACUser_initWithByteArray_(IOSByteArray *data) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ACUser *create_ACUser_initWithByteArray_(IOSByteArray *data);

J2OBJC_TYPE_LITERAL_HEADER(ACUser)

@compatibility_alias ImDiyalogCoreEntityUser ACUser;

#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#endif


#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_ImDiyalogCoreEntityUser")
