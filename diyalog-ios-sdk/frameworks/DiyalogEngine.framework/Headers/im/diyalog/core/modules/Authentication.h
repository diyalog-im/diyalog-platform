//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/DATA/Diyalog/sdk-core/core/core-shared/src/main/java/im/diyalog/core/modules/Authentication.java
//

@import j2objc;

#pragma push_macro("INCLUDE_ALL_ImDiyalogCoreModulesAuthentication")
#ifdef RESTRICT_ImDiyalogCoreModulesAuthentication
#define INCLUDE_ALL_ImDiyalogCoreModulesAuthentication 0
#else
#define INCLUDE_ALL_ImDiyalogCoreModulesAuthentication 1
#endif
#undef RESTRICT_ImDiyalogCoreModulesAuthentication

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if !defined (ACAuthentication_) && (INCLUDE_ALL_ImDiyalogCoreModulesAuthentication || defined(INCLUDE_ACAuthentication))
#define ACAuthentication_

@class ACAuthRes;
@class ACAuthState;
@class ACModules;
@class ACSex;
@class ARApiSex;
@class ARPromise;
@class JavaLangLong;
@protocol ACCommand;

@interface ACAuthentication : NSObject

+ (NSString *)KEY_AUTH;

+ (NSString *)KEY_APP_DOMAIN_USER_ID;

+ (NSString *)KEY_APP_LAST_ACTIVE_DOMAIN_USER_ID;

+ (NSString *)KEY_AUTH_UID;

+ (NSString *)KEY_AUTH_ID;

+ (NSString *)KEY_LAST_ACTIVEUSER_AUTH_ID;

+ (NSString *)KEY_INACTIVE_UNREAD_COUNT;

+ (NSString *)KEY_INACTIVE_SENDERID;

+ (NSString *)KEY_PHONE;

+ (NSString *)KEY_EMAIL;

+ (NSString *)KEY_NAME;

+ (NSString *)KEY_USERIMAGE;

#pragma mark Public

- (instancetype)initWithACModules:(ACModules *)modules;

- (void)autoLoginWithLong:(jlong)authID;

- (ARPromise *)doCompleteAuthWithACAuthRes:(ACAuthRes *)authRes;

- (ARPromise *)doSendCallWithNSString:(NSString *)transactionHash;

- (ARPromise *)doSignupWithNSString:(NSString *)name
                          withACSex:(ACSex *)sex
                       withNSString:(NSString *)transactionHash;

- (ARPromise *)doStartBusinessPhoneAuthWithLong:(jlong)phone;

- (ARPromise *)doStartDomainCustomerTokenAuthWithNSString:(NSString *)deviceId
                                             withNSString:(NSString *)custId
                                             withNSString:(NSString *)custName
                                         withJavaLangLong:(JavaLangLong *)custPhone
                                             withNSString:(NSString *)custEmail;

- (ARPromise *)doStartDomainUserTokenAuthWithNSString:(NSString *)sessionId
                                         withNSString:(NSString *)userId
                                         withNSString:(NSString *)userName
                                     withJavaLangLong:(JavaLangLong *)userPhone
                                         withNSString:(NSString *)userEmail;

- (ARPromise *)doStartEmailAuthWithNSString:(NSString *)email;

- (ARPromise *)doStartPhoneAuthWithLong:(jlong)phone;

- (ARPromise *)doValidateCodeWithNSString:(NSString *)transactionHash
                             withNSString:(NSString *)code;

- (ARPromise *)doValidateTokenWithNSString:(NSString *)transactionHash
                              withNSString:(NSString *)dlgToken;

- (ACAuthState *)getAuthState __attribute__((deprecated));

- (NSString *)getEmail __attribute__((deprecated));

- (jlong)getPhone __attribute__((deprecated));

- (jboolean)isLoggedIn;

- (jint)myUid;

- (id<ACCommand>)requestCallActivation __attribute__((deprecated));

- (id<ACCommand>)requestCompleteOauthWithNSString:(NSString *)code __attribute__((deprecated));

- (id<ACCommand>)requestCompleteSuperUserAuth;

- (id<ACCommand>)requestGetOAuth2Params __attribute__((deprecated));

- (id<ACCommand>)requestStartAnonymousAuthWithNSString:(NSString *)userName __attribute__((deprecated));

- (id<ACCommand>)requestStartAnonymousAuthForFaq;

- (id<ACCommand>)requestStartDomainEmailAuthWithNSString:(NSString *)email __attribute__((deprecated));

- (id<ACCommand>)requestStartEmailAuthWithNSString:(NSString *)email __attribute__((deprecated));

- (id<ACCommand>)requestStartPhoneAuthWithLong:(jlong)phone __attribute__((deprecated));

- (id<ACCommand>)requestStartUserNameAuthWithNSString:(NSString *)userName __attribute__((deprecated));

- (id<ACCommand>)requestValidateCodeWithNSString:(NSString *)code __attribute__((deprecated));

- (id<ACCommand>)requestValidatePasswordWithNSString:(NSString *)password __attribute__((deprecated));

- (void)resetAuth __attribute__((deprecated));

- (void)resetCurrentAuth;

- (void)resetModule __attribute__((deprecated));

- (void)run;

- (id<ACCommand>)signUpWithNSString:(NSString *)name
                       withARApiSex:(ARApiSex *)sex
                       withNSString:(NSString *)avatarPath __attribute__((deprecated));

- (void)switchAccount;

@end

J2OBJC_EMPTY_STATIC_INIT(ACAuthentication)

inline NSString *ACAuthentication_get_KEY_AUTH();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *ACAuthentication_KEY_AUTH;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ACAuthentication, KEY_AUTH, NSString *)

inline NSString *ACAuthentication_get_KEY_APP_DOMAIN_USER_ID();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *ACAuthentication_KEY_APP_DOMAIN_USER_ID;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ACAuthentication, KEY_APP_DOMAIN_USER_ID, NSString *)

inline NSString *ACAuthentication_get_KEY_APP_LAST_ACTIVE_DOMAIN_USER_ID();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *ACAuthentication_KEY_APP_LAST_ACTIVE_DOMAIN_USER_ID;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ACAuthentication, KEY_APP_LAST_ACTIVE_DOMAIN_USER_ID, NSString *)

inline NSString *ACAuthentication_get_KEY_AUTH_UID();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *ACAuthentication_KEY_AUTH_UID;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ACAuthentication, KEY_AUTH_UID, NSString *)

inline NSString *ACAuthentication_get_KEY_AUTH_ID();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *ACAuthentication_KEY_AUTH_ID;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ACAuthentication, KEY_AUTH_ID, NSString *)

inline NSString *ACAuthentication_get_KEY_LAST_ACTIVEUSER_AUTH_ID();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *ACAuthentication_KEY_LAST_ACTIVEUSER_AUTH_ID;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ACAuthentication, KEY_LAST_ACTIVEUSER_AUTH_ID, NSString *)

inline NSString *ACAuthentication_get_KEY_INACTIVE_UNREAD_COUNT();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *ACAuthentication_KEY_INACTIVE_UNREAD_COUNT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ACAuthentication, KEY_INACTIVE_UNREAD_COUNT, NSString *)

inline NSString *ACAuthentication_get_KEY_INACTIVE_SENDERID();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *ACAuthentication_KEY_INACTIVE_SENDERID;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ACAuthentication, KEY_INACTIVE_SENDERID, NSString *)

inline NSString *ACAuthentication_get_KEY_PHONE();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *ACAuthentication_KEY_PHONE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ACAuthentication, KEY_PHONE, NSString *)

inline NSString *ACAuthentication_get_KEY_EMAIL();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *ACAuthentication_KEY_EMAIL;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ACAuthentication, KEY_EMAIL, NSString *)

inline NSString *ACAuthentication_get_KEY_NAME();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *ACAuthentication_KEY_NAME;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ACAuthentication, KEY_NAME, NSString *)

inline NSString *ACAuthentication_get_KEY_USERIMAGE();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *ACAuthentication_KEY_USERIMAGE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ACAuthentication, KEY_USERIMAGE, NSString *)

FOUNDATION_EXPORT void ACAuthentication_initWithACModules_(ACAuthentication *self, ACModules *modules);

FOUNDATION_EXPORT ACAuthentication *new_ACAuthentication_initWithACModules_(ACModules *modules) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ACAuthentication *create_ACAuthentication_initWithACModules_(ACModules *modules);

J2OBJC_TYPE_LITERAL_HEADER(ACAuthentication)

@compatibility_alias ImDiyalogCoreModulesAuthentication ACAuthentication;

#endif


#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_ImDiyalogCoreModulesAuthentication")
