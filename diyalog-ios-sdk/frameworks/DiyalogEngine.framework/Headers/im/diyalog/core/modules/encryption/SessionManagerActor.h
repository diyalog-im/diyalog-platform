//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/DATA/Diyalog/sdk-core/core/core-shared/src/main/java/im/diyalog/core/modules/encryption/SessionManagerActor.java
//

@import j2objc;

#pragma push_macro("INCLUDE_ALL_ImDiyalogCoreModulesEncryptionSessionManagerActor")
#ifdef RESTRICT_ImDiyalogCoreModulesEncryptionSessionManagerActor
#define INCLUDE_ALL_ImDiyalogCoreModulesEncryptionSessionManagerActor 0
#else
#define INCLUDE_ALL_ImDiyalogCoreModulesEncryptionSessionManagerActor 1
#endif
#undef RESTRICT_ImDiyalogCoreModulesEncryptionSessionManagerActor

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if !defined (ImDiyalogCoreModulesEncryptionSessionManagerActor_) && (INCLUDE_ALL_ImDiyalogCoreModulesEncryptionSessionManagerActor || defined(INCLUDE_ImDiyalogCoreModulesEncryptionSessionManagerActor))
#define ImDiyalogCoreModulesEncryptionSessionManagerActor_

#define RESTRICT_ImDiyalogCoreModulesModuleActor 1
#define INCLUDE_ACModuleActor 1
#include "../../../../../im/diyalog/core/modules/ModuleActor.h"

@class ARPromise;
@protocol ACModuleContext;

/*!
 @brief Stores and manages encrypted sessions between peers.
 Can be asked to pick session parameters for specific peer.
 */
@interface ImDiyalogCoreModulesEncryptionSessionManagerActor : ACModuleActor

#pragma mark Public

- (instancetype)initWithACModuleContext:(id<ACModuleContext>)context;

- (ARPromise *)onAskWithId:(id)message;

/*!
 @brief Pick session
 @param uid        User's id
 @param keyGroupId User's key group
 */
- (ARPromise *)pickSessionWithInt:(jint)uid
                          withInt:(jint)keyGroupId;

/*!
 @brief Pick session for specific keys
 @param uid         User's id
 @param keyGroupId  User's key group
 @param ownKeyId    Own Pre Key id
 @param theirKeyId  Their Pre Key id
 */
- (ARPromise *)pickSessionWithInt:(jint)uid
                          withInt:(jint)keyGroupId
                         withLong:(jlong)ownKeyId
                         withLong:(jlong)theirKeyId;

- (void)preStart;

@end

J2OBJC_EMPTY_STATIC_INIT(ImDiyalogCoreModulesEncryptionSessionManagerActor)

FOUNDATION_EXPORT void ImDiyalogCoreModulesEncryptionSessionManagerActor_initWithACModuleContext_(ImDiyalogCoreModulesEncryptionSessionManagerActor *self, id<ACModuleContext> context);

FOUNDATION_EXPORT ImDiyalogCoreModulesEncryptionSessionManagerActor *new_ImDiyalogCoreModulesEncryptionSessionManagerActor_initWithACModuleContext_(id<ACModuleContext> context) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ImDiyalogCoreModulesEncryptionSessionManagerActor *create_ImDiyalogCoreModulesEncryptionSessionManagerActor_initWithACModuleContext_(id<ACModuleContext> context);

J2OBJC_TYPE_LITERAL_HEADER(ImDiyalogCoreModulesEncryptionSessionManagerActor)

#endif

#if !defined (ImDiyalogCoreModulesEncryptionSessionManagerActor_PickSessionForDecrypt_) && (INCLUDE_ALL_ImDiyalogCoreModulesEncryptionSessionManagerActor || defined(INCLUDE_ImDiyalogCoreModulesEncryptionSessionManagerActor_PickSessionForDecrypt))
#define ImDiyalogCoreModulesEncryptionSessionManagerActor_PickSessionForDecrypt_

#define RESTRICT_ImDiyalogRuntimeActorsAskAskMessage 1
#define INCLUDE_ImDiyalogRuntimeActorsAskAskMessage 1
#include "../../../../../im/diyalog/runtime/actors/ask/AskMessage.h"

@interface ImDiyalogCoreModulesEncryptionSessionManagerActor_PickSessionForDecrypt : NSObject < ImDiyalogRuntimeActorsAskAskMessage >

#pragma mark Public

- (instancetype)initWithInt:(jint)uid
                    withInt:(jint)keyGroupId
                   withLong:(jlong)theirPreKey
                   withLong:(jlong)ownPreKey;

- (jint)getKeyGroupId;

- (jlong)getOwnPreKey;

- (jlong)getTheirPreKey;

- (jint)getUid;

@end

J2OBJC_EMPTY_STATIC_INIT(ImDiyalogCoreModulesEncryptionSessionManagerActor_PickSessionForDecrypt)

FOUNDATION_EXPORT void ImDiyalogCoreModulesEncryptionSessionManagerActor_PickSessionForDecrypt_initWithInt_withInt_withLong_withLong_(ImDiyalogCoreModulesEncryptionSessionManagerActor_PickSessionForDecrypt *self, jint uid, jint keyGroupId, jlong theirPreKey, jlong ownPreKey);

FOUNDATION_EXPORT ImDiyalogCoreModulesEncryptionSessionManagerActor_PickSessionForDecrypt *new_ImDiyalogCoreModulesEncryptionSessionManagerActor_PickSessionForDecrypt_initWithInt_withInt_withLong_withLong_(jint uid, jint keyGroupId, jlong theirPreKey, jlong ownPreKey) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ImDiyalogCoreModulesEncryptionSessionManagerActor_PickSessionForDecrypt *create_ImDiyalogCoreModulesEncryptionSessionManagerActor_PickSessionForDecrypt_initWithInt_withInt_withLong_withLong_(jint uid, jint keyGroupId, jlong theirPreKey, jlong ownPreKey);

J2OBJC_TYPE_LITERAL_HEADER(ImDiyalogCoreModulesEncryptionSessionManagerActor_PickSessionForDecrypt)

#endif

#if !defined (ImDiyalogCoreModulesEncryptionSessionManagerActor_PickSessionForEncrypt_) && (INCLUDE_ALL_ImDiyalogCoreModulesEncryptionSessionManagerActor || defined(INCLUDE_ImDiyalogCoreModulesEncryptionSessionManagerActor_PickSessionForEncrypt))
#define ImDiyalogCoreModulesEncryptionSessionManagerActor_PickSessionForEncrypt_

#define RESTRICT_ImDiyalogRuntimeActorsAskAskMessage 1
#define INCLUDE_ImDiyalogRuntimeActorsAskAskMessage 1
#include "../../../../../im/diyalog/runtime/actors/ask/AskMessage.h"

@interface ImDiyalogCoreModulesEncryptionSessionManagerActor_PickSessionForEncrypt : NSObject < ImDiyalogRuntimeActorsAskAskMessage >

#pragma mark Public

- (instancetype)initWithInt:(jint)uid
                    withInt:(jint)keyGroupId;

- (jint)getKeyGroupId;

- (jint)getUid;

@end

J2OBJC_EMPTY_STATIC_INIT(ImDiyalogCoreModulesEncryptionSessionManagerActor_PickSessionForEncrypt)

FOUNDATION_EXPORT void ImDiyalogCoreModulesEncryptionSessionManagerActor_PickSessionForEncrypt_initWithInt_withInt_(ImDiyalogCoreModulesEncryptionSessionManagerActor_PickSessionForEncrypt *self, jint uid, jint keyGroupId);

FOUNDATION_EXPORT ImDiyalogCoreModulesEncryptionSessionManagerActor_PickSessionForEncrypt *new_ImDiyalogCoreModulesEncryptionSessionManagerActor_PickSessionForEncrypt_initWithInt_withInt_(jint uid, jint keyGroupId) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ImDiyalogCoreModulesEncryptionSessionManagerActor_PickSessionForEncrypt *create_ImDiyalogCoreModulesEncryptionSessionManagerActor_PickSessionForEncrypt_initWithInt_withInt_(jint uid, jint keyGroupId);

J2OBJC_TYPE_LITERAL_HEADER(ImDiyalogCoreModulesEncryptionSessionManagerActor_PickSessionForEncrypt)

#endif


#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_ImDiyalogCoreModulesEncryptionSessionManagerActor")
