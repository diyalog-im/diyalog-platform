//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/DATA/Diyalog/sdk-core/core/core-shared/src/main/java/im/diyalog/core/modules/encryption/entity/PrivateKey.java
//

@import j2objc;

#pragma push_macro("INCLUDE_ALL_ImDiyalogCoreModulesEncryptionEntityPrivateKey")
#ifdef RESTRICT_ImDiyalogCoreModulesEncryptionEntityPrivateKey
#define INCLUDE_ALL_ImDiyalogCoreModulesEncryptionEntityPrivateKey 0
#else
#define INCLUDE_ALL_ImDiyalogCoreModulesEncryptionEntityPrivateKey 1
#endif
#undef RESTRICT_ImDiyalogCoreModulesEncryptionEntityPrivateKey

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if !defined (ImDiyalogCoreModulesEncryptionEntityPrivateKey_) && (INCLUDE_ALL_ImDiyalogCoreModulesEncryptionEntityPrivateKey || defined(INCLUDE_ImDiyalogCoreModulesEncryptionEntityPrivateKey))
#define ImDiyalogCoreModulesEncryptionEntityPrivateKey_

#define RESTRICT_ImDiyalogRuntimeBserBserObject 1
#define INCLUDE_ARBserObject 1
#include "../../../../../../im/diyalog/runtime/bser/BserObject.h"

@class ARApiEncryptionKey;
@class ARBserValues;
@class ARBserWriter;
@class IOSByteArray;
@class JavaLangBoolean;
@protocol ARFunction;
@protocol ARPredicate;
@protocol ARSupplier;

@interface ImDiyalogCoreModulesEncryptionEntityPrivateKey : ARBserObject

+ (id<ARFunction>)TO_API;

+ (id<ARSupplier>)GENERATOR;

+ (id<ARPredicate>)NOT_UPLOADED;

+ (id<ARPredicate>)UPLOADED;

#pragma mark Public

- (instancetype)initWithByteArray:(IOSByteArray *)data;

- (instancetype)initWithLong:(jlong)keyId
                withNSString:(NSString *)keyAlg
               withByteArray:(IOSByteArray *)privateKey
               withByteArray:(IOSByteArray *)publicKey;

- (instancetype)initWithLong:(jlong)keyId
                withNSString:(NSString *)keyAlg
               withByteArray:(IOSByteArray *)privateKey
               withByteArray:(IOSByteArray *)publicKey
         withJavaLangBoolean:(JavaLangBoolean *)isUploaded;

- (IOSByteArray *)getKey;

- (NSString *)getKeyAlg;

- (jlong)getKeyId;

- (IOSByteArray *)getPublicKey;

- (jboolean)isUploaded;

- (jboolean)isWasRegenerated;

- (ImDiyalogCoreModulesEncryptionEntityPrivateKey *)markAsUploaded;

- (void)parseWithARBserValues:(ARBserValues *)values;

+ (id<ARPredicate>)PRE_KEY_EQUALSWithByteArray:(IOSByteArray *)publicKey;

+ (id<ARPredicate>)PRE_KEY_EQUALS_IDWithLong:(jlong)id_;

- (void)serializeWithARBserWriter:(ARBserWriter *)writer;

+ (id<ARFunction>)SIGNWithImDiyalogCoreModulesEncryptionEntityPrivateKey:(ImDiyalogCoreModulesEncryptionEntityPrivateKey *)identity;

- (ARApiEncryptionKey *)toApiKey;

@end

J2OBJC_STATIC_INIT(ImDiyalogCoreModulesEncryptionEntityPrivateKey)

inline id<ARFunction> ImDiyalogCoreModulesEncryptionEntityPrivateKey_get_TO_API();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<ARFunction> ImDiyalogCoreModulesEncryptionEntityPrivateKey_TO_API;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ImDiyalogCoreModulesEncryptionEntityPrivateKey, TO_API, id<ARFunction>)

inline id<ARSupplier> ImDiyalogCoreModulesEncryptionEntityPrivateKey_get_GENERATOR();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<ARSupplier> ImDiyalogCoreModulesEncryptionEntityPrivateKey_GENERATOR;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ImDiyalogCoreModulesEncryptionEntityPrivateKey, GENERATOR, id<ARSupplier>)

inline id<ARPredicate> ImDiyalogCoreModulesEncryptionEntityPrivateKey_get_NOT_UPLOADED();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<ARPredicate> ImDiyalogCoreModulesEncryptionEntityPrivateKey_NOT_UPLOADED;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ImDiyalogCoreModulesEncryptionEntityPrivateKey, NOT_UPLOADED, id<ARPredicate>)

inline id<ARPredicate> ImDiyalogCoreModulesEncryptionEntityPrivateKey_get_UPLOADED();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<ARPredicate> ImDiyalogCoreModulesEncryptionEntityPrivateKey_UPLOADED;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ImDiyalogCoreModulesEncryptionEntityPrivateKey, UPLOADED, id<ARPredicate>)

FOUNDATION_EXPORT id<ARPredicate> ImDiyalogCoreModulesEncryptionEntityPrivateKey_PRE_KEY_EQUALSWithByteArray_(IOSByteArray *publicKey);

FOUNDATION_EXPORT id<ARPredicate> ImDiyalogCoreModulesEncryptionEntityPrivateKey_PRE_KEY_EQUALS_IDWithLong_(jlong id_);

FOUNDATION_EXPORT id<ARFunction> ImDiyalogCoreModulesEncryptionEntityPrivateKey_SIGNWithImDiyalogCoreModulesEncryptionEntityPrivateKey_(ImDiyalogCoreModulesEncryptionEntityPrivateKey *identity);

FOUNDATION_EXPORT void ImDiyalogCoreModulesEncryptionEntityPrivateKey_initWithLong_withNSString_withByteArray_withByteArray_withJavaLangBoolean_(ImDiyalogCoreModulesEncryptionEntityPrivateKey *self, jlong keyId, NSString *keyAlg, IOSByteArray *privateKey, IOSByteArray *publicKey, JavaLangBoolean *isUploaded);

FOUNDATION_EXPORT ImDiyalogCoreModulesEncryptionEntityPrivateKey *new_ImDiyalogCoreModulesEncryptionEntityPrivateKey_initWithLong_withNSString_withByteArray_withByteArray_withJavaLangBoolean_(jlong keyId, NSString *keyAlg, IOSByteArray *privateKey, IOSByteArray *publicKey, JavaLangBoolean *isUploaded) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ImDiyalogCoreModulesEncryptionEntityPrivateKey *create_ImDiyalogCoreModulesEncryptionEntityPrivateKey_initWithLong_withNSString_withByteArray_withByteArray_withJavaLangBoolean_(jlong keyId, NSString *keyAlg, IOSByteArray *privateKey, IOSByteArray *publicKey, JavaLangBoolean *isUploaded);

FOUNDATION_EXPORT void ImDiyalogCoreModulesEncryptionEntityPrivateKey_initWithLong_withNSString_withByteArray_withByteArray_(ImDiyalogCoreModulesEncryptionEntityPrivateKey *self, jlong keyId, NSString *keyAlg, IOSByteArray *privateKey, IOSByteArray *publicKey);

FOUNDATION_EXPORT ImDiyalogCoreModulesEncryptionEntityPrivateKey *new_ImDiyalogCoreModulesEncryptionEntityPrivateKey_initWithLong_withNSString_withByteArray_withByteArray_(jlong keyId, NSString *keyAlg, IOSByteArray *privateKey, IOSByteArray *publicKey) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ImDiyalogCoreModulesEncryptionEntityPrivateKey *create_ImDiyalogCoreModulesEncryptionEntityPrivateKey_initWithLong_withNSString_withByteArray_withByteArray_(jlong keyId, NSString *keyAlg, IOSByteArray *privateKey, IOSByteArray *publicKey);

FOUNDATION_EXPORT void ImDiyalogCoreModulesEncryptionEntityPrivateKey_initWithByteArray_(ImDiyalogCoreModulesEncryptionEntityPrivateKey *self, IOSByteArray *data);

FOUNDATION_EXPORT ImDiyalogCoreModulesEncryptionEntityPrivateKey *new_ImDiyalogCoreModulesEncryptionEntityPrivateKey_initWithByteArray_(IOSByteArray *data) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ImDiyalogCoreModulesEncryptionEntityPrivateKey *create_ImDiyalogCoreModulesEncryptionEntityPrivateKey_initWithByteArray_(IOSByteArray *data);

J2OBJC_TYPE_LITERAL_HEADER(ImDiyalogCoreModulesEncryptionEntityPrivateKey)

#endif


#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_ImDiyalogCoreModulesEncryptionEntityPrivateKey")
