//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/DATA/Diyalog/sdk-core/core/core-shared/src/main/java/im/diyalog/core/modules/encryption/session/EncryptedSession.java
//

@import j2objc;

#pragma push_macro("INCLUDE_ALL_ImDiyalogCoreModulesEncryptionSessionEncryptedSession")
#ifdef RESTRICT_ImDiyalogCoreModulesEncryptionSessionEncryptedSession
#define INCLUDE_ALL_ImDiyalogCoreModulesEncryptionSessionEncryptedSession 0
#else
#define INCLUDE_ALL_ImDiyalogCoreModulesEncryptionSessionEncryptedSession 1
#endif
#undef RESTRICT_ImDiyalogCoreModulesEncryptionSessionEncryptedSession

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if !defined (ImDiyalogCoreModulesEncryptionSessionEncryptedSession_) && (INCLUDE_ALL_ImDiyalogCoreModulesEncryptionSessionEncryptedSession || defined(INCLUDE_ImDiyalogCoreModulesEncryptionSessionEncryptedSession))
#define ImDiyalogCoreModulesEncryptionSessionEncryptedSession_

@class IOSByteArray;
@class ImDiyalogCoreModulesEncryptionEntityPrivateKey;
@class ImDiyalogCoreModulesEncryptionEntityPublicKey;

@interface ImDiyalogCoreModulesEncryptionSessionEncryptedSession : NSObject

#pragma mark Public

- (instancetype)initWithImDiyalogCoreModulesEncryptionEntityPrivateKey:(ImDiyalogCoreModulesEncryptionEntityPrivateKey *)ownIdentityKey
                    withImDiyalogCoreModulesEncryptionEntityPrivateKey:(ImDiyalogCoreModulesEncryptionEntityPrivateKey *)ownPreKey
                     withImDiyalogCoreModulesEncryptionEntityPublicKey:(ImDiyalogCoreModulesEncryptionEntityPublicKey *)theirIdentityKey
                     withImDiyalogCoreModulesEncryptionEntityPublicKey:(ImDiyalogCoreModulesEncryptionEntityPublicKey *)theirPreKey
                                                               withInt:(jint)peerKeyGroupId;

- (IOSByteArray *)getMasterKey;

- (ImDiyalogCoreModulesEncryptionEntityPrivateKey *)getOwnIdentityKey;

- (ImDiyalogCoreModulesEncryptionEntityPrivateKey *)getOwnPreKey;

- (jint)getPeerKeyGroupId;

- (ImDiyalogCoreModulesEncryptionEntityPublicKey *)getTheirIdentityKey;

- (ImDiyalogCoreModulesEncryptionEntityPublicKey *)getTheirPreKey;

@end

J2OBJC_EMPTY_STATIC_INIT(ImDiyalogCoreModulesEncryptionSessionEncryptedSession)

FOUNDATION_EXPORT void ImDiyalogCoreModulesEncryptionSessionEncryptedSession_initWithImDiyalogCoreModulesEncryptionEntityPrivateKey_withImDiyalogCoreModulesEncryptionEntityPrivateKey_withImDiyalogCoreModulesEncryptionEntityPublicKey_withImDiyalogCoreModulesEncryptionEntityPublicKey_withInt_(ImDiyalogCoreModulesEncryptionSessionEncryptedSession *self, ImDiyalogCoreModulesEncryptionEntityPrivateKey *ownIdentityKey, ImDiyalogCoreModulesEncryptionEntityPrivateKey *ownPreKey, ImDiyalogCoreModulesEncryptionEntityPublicKey *theirIdentityKey, ImDiyalogCoreModulesEncryptionEntityPublicKey *theirPreKey, jint peerKeyGroupId);

FOUNDATION_EXPORT ImDiyalogCoreModulesEncryptionSessionEncryptedSession *new_ImDiyalogCoreModulesEncryptionSessionEncryptedSession_initWithImDiyalogCoreModulesEncryptionEntityPrivateKey_withImDiyalogCoreModulesEncryptionEntityPrivateKey_withImDiyalogCoreModulesEncryptionEntityPublicKey_withImDiyalogCoreModulesEncryptionEntityPublicKey_withInt_(ImDiyalogCoreModulesEncryptionEntityPrivateKey *ownIdentityKey, ImDiyalogCoreModulesEncryptionEntityPrivateKey *ownPreKey, ImDiyalogCoreModulesEncryptionEntityPublicKey *theirIdentityKey, ImDiyalogCoreModulesEncryptionEntityPublicKey *theirPreKey, jint peerKeyGroupId) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ImDiyalogCoreModulesEncryptionSessionEncryptedSession *create_ImDiyalogCoreModulesEncryptionSessionEncryptedSession_initWithImDiyalogCoreModulesEncryptionEntityPrivateKey_withImDiyalogCoreModulesEncryptionEntityPrivateKey_withImDiyalogCoreModulesEncryptionEntityPublicKey_withImDiyalogCoreModulesEncryptionEntityPublicKey_withInt_(ImDiyalogCoreModulesEncryptionEntityPrivateKey *ownIdentityKey, ImDiyalogCoreModulesEncryptionEntityPrivateKey *ownPreKey, ImDiyalogCoreModulesEncryptionEntityPublicKey *theirIdentityKey, ImDiyalogCoreModulesEncryptionEntityPublicKey *theirPreKey, jint peerKeyGroupId);

J2OBJC_TYPE_LITERAL_HEADER(ImDiyalogCoreModulesEncryptionSessionEncryptedSession)

#endif


#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_ImDiyalogCoreModulesEncryptionSessionEncryptedSession")
