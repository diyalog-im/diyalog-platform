//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/DATA/Diyalog/sdk-core/core/core-shared/src/main/java/im/diyalog/core/modules/notifications/NotificationsActor.java
//

@import j2objc;

#pragma push_macro("INCLUDE_ALL_ImDiyalogCoreModulesNotificationsNotificationsActor")
#ifdef RESTRICT_ImDiyalogCoreModulesNotificationsNotificationsActor
#define INCLUDE_ALL_ImDiyalogCoreModulesNotificationsNotificationsActor 0
#else
#define INCLUDE_ALL_ImDiyalogCoreModulesNotificationsNotificationsActor 1
#endif
#undef RESTRICT_ImDiyalogCoreModulesNotificationsNotificationsActor

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if !defined (ImDiyalogCoreModulesNotificationsNotificationsActor_) && (INCLUDE_ALL_ImDiyalogCoreModulesNotificationsNotificationsActor || defined(INCLUDE_ImDiyalogCoreModulesNotificationsNotificationsActor))
#define ImDiyalogCoreModulesNotificationsNotificationsActor_

#define RESTRICT_ImDiyalogCoreModulesModuleActor 1
#define INCLUDE_ACModuleActor 1
#include "../../../../../im/diyalog/core/modules/ModuleActor.h"

@class ACContentDescription;
@class ACPeer;
@class ImDiyalogRuntimeEventbusEvent;
@protocol ACModuleContext;

/*!
 @brief Actor that controls all notifications in application
 NotificationsActor keeps all unread messages for showing last unread messages in notifications
 Actor also control sound effects playing logic
 */
@interface ImDiyalogCoreModulesNotificationsNotificationsActor : ACModuleActor

#pragma mark Public

/*!
 @brief Constructor of Actor
 @param context Module context
 */
- (instancetype)initWithACModuleContext:(id<ACModuleContext>)context;

/*!
 @brief Processing Application hidden event
 */
- (void)onAppHidden;

/*!
 @brief Processing Application visible event
 */
- (void)onAppVisible;

/*!
 @brief Receiving bus events
 @param event event
 */
- (void)onBusEventWithImDiyalogRuntimeEventbusEvent:(ImDiyalogRuntimeEventbusEvent *)event;

/*!
 @brief Processing Conversation hidden event
 @param peer peer
 */
- (void)onConversationHiddenWithACPeer:(ACPeer *)peer;

/*!
 @brief Processing Conversation visible event
 @param peer peer
 */
- (void)onConversationVisibleWithACPeer:(ACPeer *)peer;

/*!
 @brief Processing event about messages read
 @param peer     peer
 @param fromDate read from date
 */
- (void)onMessagesReadWithACPeer:(ACPeer *)peer
                        withLong:(jlong)fromDate;

/*!
 @brief Handling event about incoming notification
 @param peer                  peer of message
 @param sender                sender uid of message
 @param date                  date of message
 @param description_           content description of message
 @param hasCurrentUserMention does message have user mention
 */
- (void)onNewMessageWithACPeer:(ACPeer *)peer
                       withInt:(jint)sender
                      withLong:(jlong)date
      withACContentDescription:(ACContentDescription *)description_
                   withBoolean:(jboolean)hasCurrentUserMention;

/*!
 @brief Pausing notifications
 */
- (void)onNotificationsPaused;

/*!
 @brief Resuming notifications.
 Checking all pending notification peers and play notifications if it is required.
 WARRING: Implementation contains modified copy of code of onNewMessage method
 */
- (void)onNotificationsResumed;

/*!
 @brief Receiving messages
 @param message message
 */
- (void)onReceiveWithId:(id)message;

- (void)preStart;

@end

J2OBJC_EMPTY_STATIC_INIT(ImDiyalogCoreModulesNotificationsNotificationsActor)

FOUNDATION_EXPORT void ImDiyalogCoreModulesNotificationsNotificationsActor_initWithACModuleContext_(ImDiyalogCoreModulesNotificationsNotificationsActor *self, id<ACModuleContext> context);

FOUNDATION_EXPORT ImDiyalogCoreModulesNotificationsNotificationsActor *new_ImDiyalogCoreModulesNotificationsNotificationsActor_initWithACModuleContext_(id<ACModuleContext> context) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ImDiyalogCoreModulesNotificationsNotificationsActor *create_ImDiyalogCoreModulesNotificationsNotificationsActor_initWithACModuleContext_(id<ACModuleContext> context);

J2OBJC_TYPE_LITERAL_HEADER(ImDiyalogCoreModulesNotificationsNotificationsActor)

#endif

#if !defined (ImDiyalogCoreModulesNotificationsNotificationsActor_NewMessage_) && (INCLUDE_ALL_ImDiyalogCoreModulesNotificationsNotificationsActor || defined(INCLUDE_ImDiyalogCoreModulesNotificationsNotificationsActor_NewMessage))
#define ImDiyalogCoreModulesNotificationsNotificationsActor_NewMessage_

@class ACContentDescription;
@class ACPeer;

@interface ImDiyalogCoreModulesNotificationsNotificationsActor_NewMessage : NSObject

#pragma mark Public

- (instancetype)initWithACPeer:(ACPeer *)peer
                       withInt:(jint)sender
                      withLong:(jlong)sortDate
      withACContentDescription:(ACContentDescription *)contentDescription
                   withBoolean:(jboolean)hasCurrentUserMention;

- (ACContentDescription *)getContentDescription;

- (jboolean)getHasCurrentUserMention;

- (ACPeer *)getPeer;

- (jint)getSender;

- (jlong)getSortDate;

@end

J2OBJC_EMPTY_STATIC_INIT(ImDiyalogCoreModulesNotificationsNotificationsActor_NewMessage)

FOUNDATION_EXPORT void ImDiyalogCoreModulesNotificationsNotificationsActor_NewMessage_initWithACPeer_withInt_withLong_withACContentDescription_withBoolean_(ImDiyalogCoreModulesNotificationsNotificationsActor_NewMessage *self, ACPeer *peer, jint sender, jlong sortDate, ACContentDescription *contentDescription, jboolean hasCurrentUserMention);

FOUNDATION_EXPORT ImDiyalogCoreModulesNotificationsNotificationsActor_NewMessage *new_ImDiyalogCoreModulesNotificationsNotificationsActor_NewMessage_initWithACPeer_withInt_withLong_withACContentDescription_withBoolean_(ACPeer *peer, jint sender, jlong sortDate, ACContentDescription *contentDescription, jboolean hasCurrentUserMention) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ImDiyalogCoreModulesNotificationsNotificationsActor_NewMessage *create_ImDiyalogCoreModulesNotificationsNotificationsActor_NewMessage_initWithACPeer_withInt_withLong_withACContentDescription_withBoolean_(ACPeer *peer, jint sender, jlong sortDate, ACContentDescription *contentDescription, jboolean hasCurrentUserMention);

J2OBJC_TYPE_LITERAL_HEADER(ImDiyalogCoreModulesNotificationsNotificationsActor_NewMessage)

#endif

#if !defined (ImDiyalogCoreModulesNotificationsNotificationsActor_MessagesRead_) && (INCLUDE_ALL_ImDiyalogCoreModulesNotificationsNotificationsActor || defined(INCLUDE_ImDiyalogCoreModulesNotificationsNotificationsActor_MessagesRead))
#define ImDiyalogCoreModulesNotificationsNotificationsActor_MessagesRead_

@class ACPeer;

@interface ImDiyalogCoreModulesNotificationsNotificationsActor_MessagesRead : NSObject

#pragma mark Public

- (instancetype)initWithACPeer:(ACPeer *)peer
                      withLong:(jlong)fromDate;

- (jlong)getFromDate;

- (ACPeer *)getPeer;

@end

J2OBJC_EMPTY_STATIC_INIT(ImDiyalogCoreModulesNotificationsNotificationsActor_MessagesRead)

FOUNDATION_EXPORT void ImDiyalogCoreModulesNotificationsNotificationsActor_MessagesRead_initWithACPeer_withLong_(ImDiyalogCoreModulesNotificationsNotificationsActor_MessagesRead *self, ACPeer *peer, jlong fromDate);

FOUNDATION_EXPORT ImDiyalogCoreModulesNotificationsNotificationsActor_MessagesRead *new_ImDiyalogCoreModulesNotificationsNotificationsActor_MessagesRead_initWithACPeer_withLong_(ACPeer *peer, jlong fromDate) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ImDiyalogCoreModulesNotificationsNotificationsActor_MessagesRead *create_ImDiyalogCoreModulesNotificationsNotificationsActor_MessagesRead_initWithACPeer_withLong_(ACPeer *peer, jlong fromDate);

J2OBJC_TYPE_LITERAL_HEADER(ImDiyalogCoreModulesNotificationsNotificationsActor_MessagesRead)

#endif

#if !defined (ImDiyalogCoreModulesNotificationsNotificationsActor_PauseNotifications_) && (INCLUDE_ALL_ImDiyalogCoreModulesNotificationsNotificationsActor || defined(INCLUDE_ImDiyalogCoreModulesNotificationsNotificationsActor_PauseNotifications))
#define ImDiyalogCoreModulesNotificationsNotificationsActor_PauseNotifications_

@interface ImDiyalogCoreModulesNotificationsNotificationsActor_PauseNotifications : NSObject

#pragma mark Public

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ImDiyalogCoreModulesNotificationsNotificationsActor_PauseNotifications)

FOUNDATION_EXPORT void ImDiyalogCoreModulesNotificationsNotificationsActor_PauseNotifications_init(ImDiyalogCoreModulesNotificationsNotificationsActor_PauseNotifications *self);

FOUNDATION_EXPORT ImDiyalogCoreModulesNotificationsNotificationsActor_PauseNotifications *new_ImDiyalogCoreModulesNotificationsNotificationsActor_PauseNotifications_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ImDiyalogCoreModulesNotificationsNotificationsActor_PauseNotifications *create_ImDiyalogCoreModulesNotificationsNotificationsActor_PauseNotifications_init();

J2OBJC_TYPE_LITERAL_HEADER(ImDiyalogCoreModulesNotificationsNotificationsActor_PauseNotifications)

#endif

#if !defined (ImDiyalogCoreModulesNotificationsNotificationsActor_ResumeNotifications_) && (INCLUDE_ALL_ImDiyalogCoreModulesNotificationsNotificationsActor || defined(INCLUDE_ImDiyalogCoreModulesNotificationsNotificationsActor_ResumeNotifications))
#define ImDiyalogCoreModulesNotificationsNotificationsActor_ResumeNotifications_

@interface ImDiyalogCoreModulesNotificationsNotificationsActor_ResumeNotifications : NSObject

#pragma mark Public

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ImDiyalogCoreModulesNotificationsNotificationsActor_ResumeNotifications)

FOUNDATION_EXPORT void ImDiyalogCoreModulesNotificationsNotificationsActor_ResumeNotifications_init(ImDiyalogCoreModulesNotificationsNotificationsActor_ResumeNotifications *self);

FOUNDATION_EXPORT ImDiyalogCoreModulesNotificationsNotificationsActor_ResumeNotifications *new_ImDiyalogCoreModulesNotificationsNotificationsActor_ResumeNotifications_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ImDiyalogCoreModulesNotificationsNotificationsActor_ResumeNotifications *create_ImDiyalogCoreModulesNotificationsNotificationsActor_ResumeNotifications_init();

J2OBJC_TYPE_LITERAL_HEADER(ImDiyalogCoreModulesNotificationsNotificationsActor_ResumeNotifications)

#endif


#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_ImDiyalogCoreModulesNotificationsNotificationsActor")
