//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/DATA/Diyalog/sdk-core/runtime/runtime-shared/src/main/java/im/diyalog/runtime/actors/dispatch/queue/QueueDispatcher.java
//

@import j2objc;

#pragma push_macro("INCLUDE_ALL_ImDiyalogRuntimeActorsDispatchQueueQueueDispatcher")
#ifdef RESTRICT_ImDiyalogRuntimeActorsDispatchQueueQueueDispatcher
#define INCLUDE_ALL_ImDiyalogRuntimeActorsDispatchQueueQueueDispatcher 0
#else
#define INCLUDE_ALL_ImDiyalogRuntimeActorsDispatchQueueQueueDispatcher 1
#endif
#undef RESTRICT_ImDiyalogRuntimeActorsDispatchQueueQueueDispatcher

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if !defined (ImDiyalogRuntimeActorsDispatchQueueQueueDispatcher_) && (INCLUDE_ALL_ImDiyalogRuntimeActorsDispatchQueueQueueDispatcher || defined(INCLUDE_ImDiyalogRuntimeActorsDispatchQueueQueueDispatcher))
#define ImDiyalogRuntimeActorsDispatchQueueQueueDispatcher_

#define RESTRICT_ImDiyalogRuntimeActorsDispatchQueueQueueCollectionListener 1
#define INCLUDE_ImDiyalogRuntimeActorsDispatchQueueQueueCollectionListener 1
#include "../../../../../../im/diyalog/runtime/actors/dispatch/queue/QueueCollectionListener.h"

@class ARThreadPriority;
@class ImDiyalogRuntimeActorsDispatchQueueQueueCollection;
@protocol ARConsumer;

@interface ImDiyalogRuntimeActorsDispatchQueueQueueDispatcher : NSObject < ImDiyalogRuntimeActorsDispatchQueueQueueCollectionListener >

#pragma mark Public

- (instancetype)initWithNSString:(NSString *)name
            withARThreadPriority:(ARThreadPriority *)priority
withImDiyalogRuntimeActorsDispatchQueueQueueCollection:(ImDiyalogRuntimeActorsDispatchQueueQueueCollection *)collection
                  withARConsumer:(id<ARConsumer>)handler;

- (void)onChanged;

@end

J2OBJC_EMPTY_STATIC_INIT(ImDiyalogRuntimeActorsDispatchQueueQueueDispatcher)

FOUNDATION_EXPORT void ImDiyalogRuntimeActorsDispatchQueueQueueDispatcher_initWithNSString_withARThreadPriority_withImDiyalogRuntimeActorsDispatchQueueQueueCollection_withARConsumer_(ImDiyalogRuntimeActorsDispatchQueueQueueDispatcher *self, NSString *name, ARThreadPriority *priority, ImDiyalogRuntimeActorsDispatchQueueQueueCollection *collection, id<ARConsumer> handler);

FOUNDATION_EXPORT ImDiyalogRuntimeActorsDispatchQueueQueueDispatcher *new_ImDiyalogRuntimeActorsDispatchQueueQueueDispatcher_initWithNSString_withARThreadPriority_withImDiyalogRuntimeActorsDispatchQueueQueueCollection_withARConsumer_(NSString *name, ARThreadPriority *priority, ImDiyalogRuntimeActorsDispatchQueueQueueCollection *collection, id<ARConsumer> handler) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ImDiyalogRuntimeActorsDispatchQueueQueueDispatcher *create_ImDiyalogRuntimeActorsDispatchQueueQueueDispatcher_initWithNSString_withARThreadPriority_withImDiyalogRuntimeActorsDispatchQueueQueueCollection_withARConsumer_(NSString *name, ARThreadPriority *priority, ImDiyalogRuntimeActorsDispatchQueueQueueCollection *collection, id<ARConsumer> handler);

J2OBJC_TYPE_LITERAL_HEADER(ImDiyalogRuntimeActorsDispatchQueueQueueDispatcher)

#endif


#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_ImDiyalogRuntimeActorsDispatchQueueQueueDispatcher")
