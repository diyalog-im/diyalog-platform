//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/DATA/Diyalog/sdk-core/runtime/runtime-shared/src/main/java/im/diyalog/runtime/bser/IncorrectTypeException.java
//

@import j2objc;

#pragma push_macro("INCLUDE_ALL_ImDiyalogRuntimeBserIncorrectTypeException")
#ifdef RESTRICT_ImDiyalogRuntimeBserIncorrectTypeException
#define INCLUDE_ALL_ImDiyalogRuntimeBserIncorrectTypeException 0
#else
#define INCLUDE_ALL_ImDiyalogRuntimeBserIncorrectTypeException 1
#endif
#undef RESTRICT_ImDiyalogRuntimeBserIncorrectTypeException

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if !defined (ARIncorrectTypeException_) && (INCLUDE_ALL_ImDiyalogRuntimeBserIncorrectTypeException || defined(INCLUDE_ARIncorrectTypeException))
#define ARIncorrectTypeException_

#define RESTRICT_JavaLangRuntimeException 1
#define INCLUDE_JavaLangRuntimeException 1
@import j2objc;

@interface ARIncorrectTypeException : JavaLangRuntimeException

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithNSString:(NSString *)detailMessage;

- (instancetype)initWithNSString:(NSString *)detailMessage
                 withNSException:(NSException *)throwable;

- (instancetype)initWithNSException:(NSException *)throwable;

@end

J2OBJC_EMPTY_STATIC_INIT(ARIncorrectTypeException)

FOUNDATION_EXPORT void ARIncorrectTypeException_init(ARIncorrectTypeException *self);

FOUNDATION_EXPORT ARIncorrectTypeException *new_ARIncorrectTypeException_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ARIncorrectTypeException *create_ARIncorrectTypeException_init();

FOUNDATION_EXPORT void ARIncorrectTypeException_initWithNSString_(ARIncorrectTypeException *self, NSString *detailMessage);

FOUNDATION_EXPORT ARIncorrectTypeException *new_ARIncorrectTypeException_initWithNSString_(NSString *detailMessage) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ARIncorrectTypeException *create_ARIncorrectTypeException_initWithNSString_(NSString *detailMessage);

FOUNDATION_EXPORT void ARIncorrectTypeException_initWithNSString_withNSException_(ARIncorrectTypeException *self, NSString *detailMessage, NSException *throwable);

FOUNDATION_EXPORT ARIncorrectTypeException *new_ARIncorrectTypeException_initWithNSString_withNSException_(NSString *detailMessage, NSException *throwable) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ARIncorrectTypeException *create_ARIncorrectTypeException_initWithNSString_withNSException_(NSString *detailMessage, NSException *throwable);

FOUNDATION_EXPORT void ARIncorrectTypeException_initWithNSException_(ARIncorrectTypeException *self, NSException *throwable);

FOUNDATION_EXPORT ARIncorrectTypeException *new_ARIncorrectTypeException_initWithNSException_(NSException *throwable) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ARIncorrectTypeException *create_ARIncorrectTypeException_initWithNSException_(NSException *throwable);

J2OBJC_TYPE_LITERAL_HEADER(ARIncorrectTypeException)

@compatibility_alias ImDiyalogRuntimeBserIncorrectTypeException ARIncorrectTypeException;

#endif


#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_ImDiyalogRuntimeBserIncorrectTypeException")
