//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/DATA/Diyalog/sdk-core/runtime/runtime-shared/src/main/java/im/diyalog/runtime/crypto/primitives/kuznechik/KuznechikCipher.java
//

@import j2objc;

#pragma push_macro("INCLUDE_ALL_ImDiyalogRuntimeCryptoPrimitivesKuznechikKuznechikCipher")
#ifdef RESTRICT_ImDiyalogRuntimeCryptoPrimitivesKuznechikKuznechikCipher
#define INCLUDE_ALL_ImDiyalogRuntimeCryptoPrimitivesKuznechikKuznechikCipher 0
#else
#define INCLUDE_ALL_ImDiyalogRuntimeCryptoPrimitivesKuznechikKuznechikCipher 1
#endif
#undef RESTRICT_ImDiyalogRuntimeCryptoPrimitivesKuznechikKuznechikCipher

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if !defined (ImDiyalogRuntimeCryptoPrimitivesKuznechikKuznechikCipher_) && (INCLUDE_ALL_ImDiyalogRuntimeCryptoPrimitivesKuznechikKuznechikCipher || defined(INCLUDE_ImDiyalogRuntimeCryptoPrimitivesKuznechikKuznechikCipher))
#define ImDiyalogRuntimeCryptoPrimitivesKuznechikKuznechikCipher_

#define RESTRICT_ImDiyalogRuntimeCryptoBlockCipher 1
#define INCLUDE_ARBlockCipher 1
#include "../../../../../../im/diyalog/runtime/crypto/BlockCipher.h"

@class IOSByteArray;
@class ImDiyalogRuntimeCryptoPrimitivesKuznechikKuzIntKey;

/*!
 @brief Kuzhnechik (aka Grasshopper) russian encryption standard implementation
 <p>
 Ported from
 https://github.com/mjosaarinen/kuznechik/blob/master/kuznechik_8bit.c
 */
@interface ImDiyalogRuntimeCryptoPrimitivesKuznechikKuznechikCipher : NSObject < ARBlockCipher >

#pragma mark Public

- (instancetype)initWithByteArray:(IOSByteArray *)rawKey;

/*!
 @brief Decrypting block with Kuznechik encryption
 @param data       source data for decryption
 @param offset     offset in data
 @param dest       destination array
 @param destOffset destination offset
 */
- (void)decryptBlock:(IOSByteArray *)data
          withOffset:(jint)offset
              toDest:(IOSByteArray *)dest
          withOffset:(jint)destOffset;

/*!
 @brief Encrypting Block with KuznechikImpl encryption
 @param data       16-byte block for encryption
 @param offset     offset in block
 @param dest       destination array
 @param destOffset destinaation offset
 */
- (void)encryptBlock:(IOSByteArray *)data
          withOffset:(jint)offset
              toDest:(IOSByteArray *)dest
          withOffset:(jint)destOffset;

- (jint)getBlockSize;

/*!
 @brief Raw Key
 @return key
 */
- (IOSByteArray *)getRawKey;

#pragma mark Package-Private

/*!
 @brief Converting binary representation of a key to internal format
 @param key raw key
 @return key in internal format
 */
+ (ImDiyalogRuntimeCryptoPrimitivesKuznechikKuzIntKey *)convertKeyWithByteArray:(IOSByteArray *)key;

@end

J2OBJC_EMPTY_STATIC_INIT(ImDiyalogRuntimeCryptoPrimitivesKuznechikKuznechikCipher)

FOUNDATION_EXPORT void ImDiyalogRuntimeCryptoPrimitivesKuznechikKuznechikCipher_initWithByteArray_(ImDiyalogRuntimeCryptoPrimitivesKuznechikKuznechikCipher *self, IOSByteArray *rawKey);

FOUNDATION_EXPORT ImDiyalogRuntimeCryptoPrimitivesKuznechikKuznechikCipher *new_ImDiyalogRuntimeCryptoPrimitivesKuznechikKuznechikCipher_initWithByteArray_(IOSByteArray *rawKey) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ImDiyalogRuntimeCryptoPrimitivesKuznechikKuznechikCipher *create_ImDiyalogRuntimeCryptoPrimitivesKuznechikKuznechikCipher_initWithByteArray_(IOSByteArray *rawKey);

FOUNDATION_EXPORT ImDiyalogRuntimeCryptoPrimitivesKuznechikKuzIntKey *ImDiyalogRuntimeCryptoPrimitivesKuznechikKuznechikCipher_convertKeyWithByteArray_(IOSByteArray *key);

J2OBJC_TYPE_LITERAL_HEADER(ImDiyalogRuntimeCryptoPrimitivesKuznechikKuznechikCipher)

#endif


#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_ImDiyalogRuntimeCryptoPrimitivesKuznechikKuznechikCipher")
