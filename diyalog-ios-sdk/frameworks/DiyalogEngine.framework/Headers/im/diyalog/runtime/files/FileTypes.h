//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/DATA/Diyalog/sdk-core/runtime/runtime-shared/src/main/java/im/diyalog/runtime/files/FileTypes.java
//

@import j2objc;

#pragma push_macro("INCLUDE_ALL_ImDiyalogRuntimeFilesFileTypes")
#ifdef RESTRICT_ImDiyalogRuntimeFilesFileTypes
#define INCLUDE_ALL_ImDiyalogRuntimeFilesFileTypes 0
#else
#define INCLUDE_ALL_ImDiyalogRuntimeFilesFileTypes 1
#endif
#undef RESTRICT_ImDiyalogRuntimeFilesFileTypes

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if !defined (ARFileTypes_) && (INCLUDE_ALL_ImDiyalogRuntimeFilesFileTypes || defined(INCLUDE_ARFileTypes))
#define ARFileTypes_

@interface ARFileTypes : NSObject

+ (jint)TYPE_UNKNOWN;

+ (jint)TYPE_DOCUMENT;

+ (jint)TYPE_SPREAD_SHEET;

+ (jint)TYPE_PRESENTATION;

+ (jint)TYPE_MUSIC;

+ (jint)TYPE_BOOK;

+ (jint)TYPE_PICTURE;

+ (jint)TYPE_VIDEO;

+ (jint)TYPE_EXECUTABLE;

+ (jint)TYPE_ARCHIVE;

+ (jint)TYPE_HACKER;

#pragma mark Public

+ (jint)getTypeWithNSString:(NSString *)extension;

@end

J2OBJC_STATIC_INIT(ARFileTypes)

inline jint ARFileTypes_get_TYPE_UNKNOWN();
#define ARFileTypes_TYPE_UNKNOWN -1
J2OBJC_STATIC_FIELD_CONSTANT(ARFileTypes, TYPE_UNKNOWN, jint)

inline jint ARFileTypes_get_TYPE_DOCUMENT();
#define ARFileTypes_TYPE_DOCUMENT 1
J2OBJC_STATIC_FIELD_CONSTANT(ARFileTypes, TYPE_DOCUMENT, jint)

inline jint ARFileTypes_get_TYPE_SPREAD_SHEET();
#define ARFileTypes_TYPE_SPREAD_SHEET 2
J2OBJC_STATIC_FIELD_CONSTANT(ARFileTypes, TYPE_SPREAD_SHEET, jint)

inline jint ARFileTypes_get_TYPE_PRESENTATION();
#define ARFileTypes_TYPE_PRESENTATION 13
J2OBJC_STATIC_FIELD_CONSTANT(ARFileTypes, TYPE_PRESENTATION, jint)

inline jint ARFileTypes_get_TYPE_MUSIC();
#define ARFileTypes_TYPE_MUSIC 0
J2OBJC_STATIC_FIELD_CONSTANT(ARFileTypes, TYPE_MUSIC, jint)

inline jint ARFileTypes_get_TYPE_BOOK();
#define ARFileTypes_TYPE_BOOK 3
J2OBJC_STATIC_FIELD_CONSTANT(ARFileTypes, TYPE_BOOK, jint)

inline jint ARFileTypes_get_TYPE_PICTURE();
#define ARFileTypes_TYPE_PICTURE 4
J2OBJC_STATIC_FIELD_CONSTANT(ARFileTypes, TYPE_PICTURE, jint)

inline jint ARFileTypes_get_TYPE_VIDEO();
#define ARFileTypes_TYPE_VIDEO 5
J2OBJC_STATIC_FIELD_CONSTANT(ARFileTypes, TYPE_VIDEO, jint)

inline jint ARFileTypes_get_TYPE_EXECUTABLE();
#define ARFileTypes_TYPE_EXECUTABLE 6
J2OBJC_STATIC_FIELD_CONSTANT(ARFileTypes, TYPE_EXECUTABLE, jint)

inline jint ARFileTypes_get_TYPE_ARCHIVE();
#define ARFileTypes_TYPE_ARCHIVE 7
J2OBJC_STATIC_FIELD_CONSTANT(ARFileTypes, TYPE_ARCHIVE, jint)

inline jint ARFileTypes_get_TYPE_HACKER();
#define ARFileTypes_TYPE_HACKER 12
J2OBJC_STATIC_FIELD_CONSTANT(ARFileTypes, TYPE_HACKER, jint)

FOUNDATION_EXPORT jint ARFileTypes_getTypeWithNSString_(NSString *extension);

J2OBJC_TYPE_LITERAL_HEADER(ARFileTypes)

@compatibility_alias ImDiyalogRuntimeFilesFileTypes ARFileTypes;

#endif


#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_ImDiyalogRuntimeFilesFileTypes")
