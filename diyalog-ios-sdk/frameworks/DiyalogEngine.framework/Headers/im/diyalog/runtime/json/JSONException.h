//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/DATA/Diyalog/sdk-core/runtime/runtime-shared/src/main/java/im/diyalog/runtime/json/JSONException.java
//

@import j2objc;

#pragma push_macro("INCLUDE_ALL_ImDiyalogRuntimeJsonJSONException")
#ifdef RESTRICT_ImDiyalogRuntimeJsonJSONException
#define INCLUDE_ALL_ImDiyalogRuntimeJsonJSONException 0
#else
#define INCLUDE_ALL_ImDiyalogRuntimeJsonJSONException 1
#endif
#undef RESTRICT_ImDiyalogRuntimeJsonJSONException

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if !defined (ARJSONException_) && (INCLUDE_ALL_ImDiyalogRuntimeJsonJSONException || defined(INCLUDE_ARJSONException))
#define ARJSONException_

#define RESTRICT_JavaLangException 1
#define INCLUDE_JavaLangException 1
@import j2objc;

/*!
 @brief Thrown to indicate a problem with the JSON API.
 Such problems include:
 <ul>
 <li>Attempts to parse or construct malformed documents
 <li>Use of null as a name
 <li>Use of numeric types not available to JSON, such as <code>NaNs</code>
  or <code>infinities</code>.
 <li>Lookups using an out of range index or nonexistent name
 <li>Type mismatches on lookups
 </ul>
 <p>Although this is a checked exception, it is rarely recoverable. Most
 callers should simply wrap this exception in an unchecked exception and
 rethrow:
 @code
  public JSONArray toJSONObject() {
     try {
         JSONObject result = new JSONObject();
         ...
     } catch (JSONException e) {
         throw new RuntimeException(e);
     }
  
@endcode
 */
@interface ARJSONException : JavaLangException

#pragma mark Public

- (instancetype)initWithNSString:(NSString *)s;

@end

J2OBJC_EMPTY_STATIC_INIT(ARJSONException)

FOUNDATION_EXPORT void ARJSONException_initWithNSString_(ARJSONException *self, NSString *s);

FOUNDATION_EXPORT ARJSONException *new_ARJSONException_initWithNSString_(NSString *s) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ARJSONException *create_ARJSONException_initWithNSString_(NSString *s);

J2OBJC_TYPE_LITERAL_HEADER(ARJSONException)

@compatibility_alias ImDiyalogRuntimeJsonJSONException ARJSONException;

#endif


#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_ImDiyalogRuntimeJsonJSONException")
