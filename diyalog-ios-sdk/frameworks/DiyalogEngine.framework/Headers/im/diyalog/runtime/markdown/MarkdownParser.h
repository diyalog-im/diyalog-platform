//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/DATA/Diyalog/sdk-core/runtime/runtime-shared/src/main/java/im/diyalog/runtime/markdown/MarkdownParser.java
//

@import j2objc;

#pragma push_macro("INCLUDE_ALL_ImDiyalogRuntimeMarkdownMarkdownParser")
#ifdef RESTRICT_ImDiyalogRuntimeMarkdownMarkdownParser
#define INCLUDE_ALL_ImDiyalogRuntimeMarkdownMarkdownParser 0
#else
#define INCLUDE_ALL_ImDiyalogRuntimeMarkdownMarkdownParser 1
#endif
#undef RESTRICT_ImDiyalogRuntimeMarkdownMarkdownParser

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if !defined (ARMarkdownParser_) && (INCLUDE_ALL_ImDiyalogRuntimeMarkdownMarkdownParser || defined(INCLUDE_ARMarkdownParser))
#define ARMarkdownParser_

@class ARMDDocument;

@interface ARMarkdownParser : NSObject

+ (jint)MODE_FULL;

+ (jint)MODE_LITE;

+ (jint)MODE_ONLY_LINKS;

#pragma mark Public

- (instancetype)initWithInt:(jint)mode;

/*!
 @brief Parsing markdown document
 @param text markdown text
 @return parsed document
 */
- (ARMDDocument *)processDocumentWithNSString:(NSString *)text;

@end

J2OBJC_EMPTY_STATIC_INIT(ARMarkdownParser)

inline jint ARMarkdownParser_get_MODE_FULL();
#define ARMarkdownParser_MODE_FULL 0
J2OBJC_STATIC_FIELD_CONSTANT(ARMarkdownParser, MODE_FULL, jint)

inline jint ARMarkdownParser_get_MODE_LITE();
#define ARMarkdownParser_MODE_LITE 1
J2OBJC_STATIC_FIELD_CONSTANT(ARMarkdownParser, MODE_LITE, jint)

inline jint ARMarkdownParser_get_MODE_ONLY_LINKS();
#define ARMarkdownParser_MODE_ONLY_LINKS 2
J2OBJC_STATIC_FIELD_CONSTANT(ARMarkdownParser, MODE_ONLY_LINKS, jint)

FOUNDATION_EXPORT void ARMarkdownParser_initWithInt_(ARMarkdownParser *self, jint mode);

FOUNDATION_EXPORT ARMarkdownParser *new_ARMarkdownParser_initWithInt_(jint mode) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ARMarkdownParser *create_ARMarkdownParser_initWithInt_(jint mode);

J2OBJC_TYPE_LITERAL_HEADER(ARMarkdownParser)

@compatibility_alias ImDiyalogRuntimeMarkdownMarkdownParser ARMarkdownParser;

#endif


#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_ImDiyalogRuntimeMarkdownMarkdownParser")
