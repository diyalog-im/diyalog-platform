//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/DATA/Diyalog/sdk-core/core/core-shared/src/main/java/im/diyalog/core/api/ApiTypingType.java
//

@import j2objc;

#pragma push_macro("INCLUDE_ALL_ImDiyalogCoreApiApiTypingType")
#ifdef RESTRICT_ImDiyalogCoreApiApiTypingType
#define INCLUDE_ALL_ImDiyalogCoreApiApiTypingType 0
#else
#define INCLUDE_ALL_ImDiyalogCoreApiApiTypingType 1
#endif
#undef RESTRICT_ImDiyalogCoreApiApiTypingType

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if !defined (ARApiTypingType_) && (INCLUDE_ALL_ImDiyalogCoreApiApiTypingType || defined(INCLUDE_ARApiTypingType))
#define ARApiTypingType_

#define RESTRICT_JavaLangEnum 1
#define INCLUDE_JavaLangEnum 1
@import j2objc;

typedef NS_ENUM(NSUInteger, ARApiTypingType_Enum) {
  ARApiTypingType_Enum_TEXT = 0,
  ARApiTypingType_Enum_UNSUPPORTED_VALUE = 1,
};

@interface ARApiTypingType : JavaLangEnum < NSCopying >

+ (ARApiTypingType *)TEXT;

+ (ARApiTypingType *)UNSUPPORTED_VALUE;

#pragma mark Public

- (jint)getValue;

+ (ARApiTypingType *)parseWithInt:(jint)value;

#pragma mark Package-Private

+ (IOSObjectArray *)values;

+ (ARApiTypingType *)valueOfWithNSString:(NSString *)name;

- (id)copyWithZone:(NSZone *)zone;
- (ARApiTypingType_Enum)toNSEnum;

@end

J2OBJC_STATIC_INIT(ARApiTypingType)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT ARApiTypingType *ARApiTypingType_values_[];

inline ARApiTypingType *ARApiTypingType_get_TEXT();
J2OBJC_ENUM_CONSTANT(ARApiTypingType, TEXT)

inline ARApiTypingType *ARApiTypingType_get_UNSUPPORTED_VALUE();
J2OBJC_ENUM_CONSTANT(ARApiTypingType, UNSUPPORTED_VALUE)

FOUNDATION_EXPORT ARApiTypingType *ARApiTypingType_parseWithInt_(jint value);

FOUNDATION_EXPORT IOSObjectArray *ARApiTypingType_values();

FOUNDATION_EXPORT ARApiTypingType *ARApiTypingType_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT ARApiTypingType *ARApiTypingType_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(ARApiTypingType)

@compatibility_alias ImDiyalogCoreApiApiTypingType ARApiTypingType;

#endif


#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_ImDiyalogCoreApiApiTypingType")
