//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/DATA/Diyalog/sdk-core/core/core-shared/src/main/java/im/diyalog/core/api/rpc/RequestStartDomainSecAuth.java
//

@import j2objc;

#pragma push_macro("INCLUDE_ALL_ImDiyalogCoreApiRpcRequestStartDomainSecAuth")
#ifdef RESTRICT_ImDiyalogCoreApiRpcRequestStartDomainSecAuth
#define INCLUDE_ALL_ImDiyalogCoreApiRpcRequestStartDomainSecAuth 0
#else
#define INCLUDE_ALL_ImDiyalogCoreApiRpcRequestStartDomainSecAuth 1
#endif
#undef RESTRICT_ImDiyalogCoreApiRpcRequestStartDomainSecAuth

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if !defined (ARRequestStartDomainSecAuth_) && (INCLUDE_ALL_ImDiyalogCoreApiRpcRequestStartDomainSecAuth || defined(INCLUDE_ARRequestStartDomainSecAuth))
#define ARRequestStartDomainSecAuth_

#define RESTRICT_ImDiyalogCoreNetworkParserRequest 1
#define INCLUDE_ACRequest 1
#include "../../../../../im/diyalog/core/network/parser/Request.h"

@class ARApiDomainSecurity;
@class ARBserValues;
@class ARBserWriter;
@class IOSByteArray;
@protocol JavaUtilList;

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

@interface ARRequestStartDomainSecAuth : ACRequest

+ (jint)HEADER;

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithARApiDomainSecurity:(ARApiDomainSecurity * __nonnull)domainSecurity
                                    withInt:(jint)appId
                               withNSString:(NSString * __nonnull)apiKey
                              withByteArray:(IOSByteArray * __nonnull)deviceHash
                               withNSString:(NSString * __nonnull)deviceTitle
                               withNSString:(NSString * __nullable)timeZone
                           withJavaUtilList:(id<JavaUtilList> __nonnull)preferredLanguages;

+ (ARRequestStartDomainSecAuth *)fromBytesWithByteArray:(IOSByteArray *)data;

- (NSString * __nonnull)getApiKey;

- (jint)getAppId;

- (IOSByteArray * __nonnull)getDeviceHash;

- (NSString * __nonnull)getDeviceTitle;

- (ARApiDomainSecurity * __nonnull)getDomainSecurity;

- (jint)getHeaderKey;

- (id<JavaUtilList> __nonnull)getPreferredLanguages;

- (NSString * __nullable)getTimeZone;

- (void)parseWithARBserValues:(ARBserValues *)values;

- (void)serializeWithARBserWriter:(ARBserWriter *)writer;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(ARRequestStartDomainSecAuth)

inline jint ARRequestStartDomainSecAuth_get_HEADER();
#define ARRequestStartDomainSecAuth_HEADER 2577
J2OBJC_STATIC_FIELD_CONSTANT(ARRequestStartDomainSecAuth, HEADER, jint)

FOUNDATION_EXPORT ARRequestStartDomainSecAuth *ARRequestStartDomainSecAuth_fromBytesWithByteArray_(IOSByteArray *data);

FOUNDATION_EXPORT void ARRequestStartDomainSecAuth_initWithARApiDomainSecurity_withInt_withNSString_withByteArray_withNSString_withNSString_withJavaUtilList_(ARRequestStartDomainSecAuth *self, ARApiDomainSecurity *domainSecurity, jint appId, NSString *apiKey, IOSByteArray *deviceHash, NSString *deviceTitle, NSString *timeZone, id<JavaUtilList> preferredLanguages);

FOUNDATION_EXPORT ARRequestStartDomainSecAuth *new_ARRequestStartDomainSecAuth_initWithARApiDomainSecurity_withInt_withNSString_withByteArray_withNSString_withNSString_withJavaUtilList_(ARApiDomainSecurity *domainSecurity, jint appId, NSString *apiKey, IOSByteArray *deviceHash, NSString *deviceTitle, NSString *timeZone, id<JavaUtilList> preferredLanguages) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ARRequestStartDomainSecAuth *create_ARRequestStartDomainSecAuth_initWithARApiDomainSecurity_withInt_withNSString_withByteArray_withNSString_withNSString_withJavaUtilList_(ARApiDomainSecurity *domainSecurity, jint appId, NSString *apiKey, IOSByteArray *deviceHash, NSString *deviceTitle, NSString *timeZone, id<JavaUtilList> preferredLanguages);

FOUNDATION_EXPORT void ARRequestStartDomainSecAuth_init(ARRequestStartDomainSecAuth *self);

FOUNDATION_EXPORT ARRequestStartDomainSecAuth *new_ARRequestStartDomainSecAuth_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ARRequestStartDomainSecAuth *create_ARRequestStartDomainSecAuth_init();

J2OBJC_TYPE_LITERAL_HEADER(ARRequestStartDomainSecAuth)

@compatibility_alias ImDiyalogCoreApiRpcRequestStartDomainSecAuth ARRequestStartDomainSecAuth;

#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#endif


#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_ImDiyalogCoreApiRpcRequestStartDomainSecAuth")
