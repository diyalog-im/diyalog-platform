//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/DATA/Diyalog/sdk-core/core/core-shared/src/main/java/im/diyalog/core/api/rpc/ResponsePublicKeys.java
//

@import j2objc;

#pragma push_macro("INCLUDE_ALL_ImDiyalogCoreApiRpcResponsePublicKeys")
#ifdef RESTRICT_ImDiyalogCoreApiRpcResponsePublicKeys
#define INCLUDE_ALL_ImDiyalogCoreApiRpcResponsePublicKeys 0
#else
#define INCLUDE_ALL_ImDiyalogCoreApiRpcResponsePublicKeys 1
#endif
#undef RESTRICT_ImDiyalogCoreApiRpcResponsePublicKeys

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if !defined (ARResponsePublicKeys_) && (INCLUDE_ALL_ImDiyalogCoreApiRpcResponsePublicKeys || defined(INCLUDE_ARResponsePublicKeys))
#define ARResponsePublicKeys_

#define RESTRICT_ImDiyalogCoreNetworkParserResponse 1
#define INCLUDE_ACResponse 1
#include "../../../../../im/diyalog/core/network/parser/Response.h"

@class ARBserValues;
@class ARBserWriter;
@class IOSByteArray;
@protocol JavaUtilList;

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

@interface ARResponsePublicKeys : ACResponse

+ (jint)HEADER;

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithJavaUtilList:(id<JavaUtilList> __nonnull)publicKey
                    withJavaUtilList:(id<JavaUtilList> __nonnull)signatures;

+ (ARResponsePublicKeys *)fromBytesWithByteArray:(IOSByteArray *)data;

- (jint)getHeaderKey;

- (id<JavaUtilList> __nonnull)getPublicKey;

- (id<JavaUtilList> __nonnull)getSignatures;

- (void)parseWithARBserValues:(ARBserValues *)values;

- (void)serializeWithARBserWriter:(ARBserWriter *)writer;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(ARResponsePublicKeys)

inline jint ARResponsePublicKeys_get_HEADER();
#define ARResponsePublicKeys_HEADER 2602
J2OBJC_STATIC_FIELD_CONSTANT(ARResponsePublicKeys, HEADER, jint)

FOUNDATION_EXPORT ARResponsePublicKeys *ARResponsePublicKeys_fromBytesWithByteArray_(IOSByteArray *data);

FOUNDATION_EXPORT void ARResponsePublicKeys_initWithJavaUtilList_withJavaUtilList_(ARResponsePublicKeys *self, id<JavaUtilList> publicKey, id<JavaUtilList> signatures);

FOUNDATION_EXPORT ARResponsePublicKeys *new_ARResponsePublicKeys_initWithJavaUtilList_withJavaUtilList_(id<JavaUtilList> publicKey, id<JavaUtilList> signatures) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ARResponsePublicKeys *create_ARResponsePublicKeys_initWithJavaUtilList_withJavaUtilList_(id<JavaUtilList> publicKey, id<JavaUtilList> signatures);

FOUNDATION_EXPORT void ARResponsePublicKeys_init(ARResponsePublicKeys *self);

FOUNDATION_EXPORT ARResponsePublicKeys *new_ARResponsePublicKeys_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ARResponsePublicKeys *create_ARResponsePublicKeys_init();

J2OBJC_TYPE_LITERAL_HEADER(ARResponsePublicKeys)

@compatibility_alias ImDiyalogCoreApiRpcResponsePublicKeys ARResponsePublicKeys;

#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#endif


#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_ImDiyalogCoreApiRpcResponsePublicKeys")
