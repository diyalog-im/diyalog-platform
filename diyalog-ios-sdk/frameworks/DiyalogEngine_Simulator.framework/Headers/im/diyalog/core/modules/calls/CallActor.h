//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/DATA/Diyalog/sdk-core/core/core-shared/src/main/java/im/diyalog/core/modules/calls/CallActor.java
//

@import j2objc;

#pragma push_macro("INCLUDE_ALL_ImDiyalogCoreModulesCallsCallActor")
#ifdef RESTRICT_ImDiyalogCoreModulesCallsCallActor
#define INCLUDE_ALL_ImDiyalogCoreModulesCallsCallActor 0
#else
#define INCLUDE_ALL_ImDiyalogCoreModulesCallsCallActor 1
#endif
#undef RESTRICT_ImDiyalogCoreModulesCallsCallActor

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if !defined (ImDiyalogCoreModulesCallsCallActor_) && (INCLUDE_ALL_ImDiyalogCoreModulesCallsCallActor || defined(INCLUDE_ImDiyalogCoreModulesCallsCallActor))
#define ImDiyalogCoreModulesCallsCallActor_

#define RESTRICT_ImDiyalogCoreModulesCallsPeersAbsCallActor 1
#define INCLUDE_ImDiyalogCoreModulesCallsPeersAbsCallActor 1
#include "../../../../../im/diyalog/core/modules/calls/peers/AbsCallActor.h"

@class ACPeer;
@protocol ACCommandCallback;
@protocol ACModuleContext;
@protocol ARWakeLock;

@interface ImDiyalogCoreModulesCallsCallActor : ImDiyalogCoreModulesCallsPeersAbsCallActor

#pragma mark Public

- (instancetype)initWithLong:(jlong)callId
              withARWakeLock:(id<ARWakeLock>)wakeLock
         withACModuleContext:(id<ACModuleContext>)context;

- (instancetype)initWithACPeer:(ACPeer *)peer
         withACCommandCallback:(id<ACCommandCallback>)callback
                withARWakeLock:(id<ARWakeLock>)wakeLock
           withACModuleContext:(id<ACModuleContext>)context;

- (void)onAnswerCall;

- (void)onBusStartedWithNSString:(NSString *)busId;

- (void)onBusStopped;

- (void)onCallConnected;

- (void)onCallEnabled;

- (void)onMuteChangedWithBoolean:(jboolean)isMuted;

- (void)onReceiveWithId:(id)message;

- (void)onRejectCall;

- (void)postStop;

- (void)preStart;

@end

J2OBJC_EMPTY_STATIC_INIT(ImDiyalogCoreModulesCallsCallActor)

FOUNDATION_EXPORT void ImDiyalogCoreModulesCallsCallActor_initWithLong_withARWakeLock_withACModuleContext_(ImDiyalogCoreModulesCallsCallActor *self, jlong callId, id<ARWakeLock> wakeLock, id<ACModuleContext> context);

FOUNDATION_EXPORT ImDiyalogCoreModulesCallsCallActor *new_ImDiyalogCoreModulesCallsCallActor_initWithLong_withARWakeLock_withACModuleContext_(jlong callId, id<ARWakeLock> wakeLock, id<ACModuleContext> context) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ImDiyalogCoreModulesCallsCallActor *create_ImDiyalogCoreModulesCallsCallActor_initWithLong_withARWakeLock_withACModuleContext_(jlong callId, id<ARWakeLock> wakeLock, id<ACModuleContext> context);

FOUNDATION_EXPORT void ImDiyalogCoreModulesCallsCallActor_initWithACPeer_withACCommandCallback_withARWakeLock_withACModuleContext_(ImDiyalogCoreModulesCallsCallActor *self, ACPeer *peer, id<ACCommandCallback> callback, id<ARWakeLock> wakeLock, id<ACModuleContext> context);

FOUNDATION_EXPORT ImDiyalogCoreModulesCallsCallActor *new_ImDiyalogCoreModulesCallsCallActor_initWithACPeer_withACCommandCallback_withARWakeLock_withACModuleContext_(ACPeer *peer, id<ACCommandCallback> callback, id<ARWakeLock> wakeLock, id<ACModuleContext> context) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ImDiyalogCoreModulesCallsCallActor *create_ImDiyalogCoreModulesCallsCallActor_initWithACPeer_withACCommandCallback_withARWakeLock_withACModuleContext_(ACPeer *peer, id<ACCommandCallback> callback, id<ARWakeLock> wakeLock, id<ACModuleContext> context);

J2OBJC_TYPE_LITERAL_HEADER(ImDiyalogCoreModulesCallsCallActor)

#endif

#if !defined (ImDiyalogCoreModulesCallsCallActor_AnswerCall_) && (INCLUDE_ALL_ImDiyalogCoreModulesCallsCallActor || defined(INCLUDE_ImDiyalogCoreModulesCallsCallActor_AnswerCall))
#define ImDiyalogCoreModulesCallsCallActor_AnswerCall_

@interface ImDiyalogCoreModulesCallsCallActor_AnswerCall : NSObject

#pragma mark Public

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ImDiyalogCoreModulesCallsCallActor_AnswerCall)

FOUNDATION_EXPORT void ImDiyalogCoreModulesCallsCallActor_AnswerCall_init(ImDiyalogCoreModulesCallsCallActor_AnswerCall *self);

FOUNDATION_EXPORT ImDiyalogCoreModulesCallsCallActor_AnswerCall *new_ImDiyalogCoreModulesCallsCallActor_AnswerCall_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ImDiyalogCoreModulesCallsCallActor_AnswerCall *create_ImDiyalogCoreModulesCallsCallActor_AnswerCall_init();

J2OBJC_TYPE_LITERAL_HEADER(ImDiyalogCoreModulesCallsCallActor_AnswerCall)

#endif

#if !defined (ImDiyalogCoreModulesCallsCallActor_RejectCall_) && (INCLUDE_ALL_ImDiyalogCoreModulesCallsCallActor || defined(INCLUDE_ImDiyalogCoreModulesCallsCallActor_RejectCall))
#define ImDiyalogCoreModulesCallsCallActor_RejectCall_

@interface ImDiyalogCoreModulesCallsCallActor_RejectCall : NSObject

#pragma mark Public

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ImDiyalogCoreModulesCallsCallActor_RejectCall)

FOUNDATION_EXPORT void ImDiyalogCoreModulesCallsCallActor_RejectCall_init(ImDiyalogCoreModulesCallsCallActor_RejectCall *self);

FOUNDATION_EXPORT ImDiyalogCoreModulesCallsCallActor_RejectCall *new_ImDiyalogCoreModulesCallsCallActor_RejectCall_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ImDiyalogCoreModulesCallsCallActor_RejectCall *create_ImDiyalogCoreModulesCallsCallActor_RejectCall_init();

J2OBJC_TYPE_LITERAL_HEADER(ImDiyalogCoreModulesCallsCallActor_RejectCall)

#endif


#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_ImDiyalogCoreModulesCallsCallActor")
