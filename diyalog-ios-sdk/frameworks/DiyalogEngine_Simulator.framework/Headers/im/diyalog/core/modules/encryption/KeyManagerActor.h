//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/DATA/Diyalog/sdk-core/core/core-shared/src/main/java/im/diyalog/core/modules/encryption/KeyManagerActor.java
//

@import j2objc;

#pragma push_macro("INCLUDE_ALL_ImDiyalogCoreModulesEncryptionKeyManagerActor")
#ifdef RESTRICT_ImDiyalogCoreModulesEncryptionKeyManagerActor
#define INCLUDE_ALL_ImDiyalogCoreModulesEncryptionKeyManagerActor 0
#else
#define INCLUDE_ALL_ImDiyalogCoreModulesEncryptionKeyManagerActor 1
#endif
#undef RESTRICT_ImDiyalogCoreModulesEncryptionKeyManagerActor

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if !defined (ImDiyalogCoreModulesEncryptionKeyManagerActor_) && (INCLUDE_ALL_ImDiyalogCoreModulesEncryptionKeyManagerActor || defined(INCLUDE_ImDiyalogCoreModulesEncryptionKeyManagerActor))
#define ImDiyalogCoreModulesEncryptionKeyManagerActor_

#define RESTRICT_ImDiyalogCoreModulesModuleActor 1
#define INCLUDE_ACModuleActor 1
#include "../../../../../im/diyalog/core/modules/ModuleActor.h"

@class ARPromise;
@protocol ACModuleContext;

/*!
 @brief Key Management Actor.
 1) Generates and uploads own keys.
 2) Downloads and manages updates about foreign keys
 */
@interface ImDiyalogCoreModulesEncryptionKeyManagerActor : ACModuleActor

#pragma mark Public

- (instancetype)initWithACModuleContext:(id<ACModuleContext>)context;

- (ARPromise *)onAskWithId:(id)message;

- (void)onReceiveWithId:(id)message;

- (void)preStart;

@end

J2OBJC_EMPTY_STATIC_INIT(ImDiyalogCoreModulesEncryptionKeyManagerActor)

FOUNDATION_EXPORT void ImDiyalogCoreModulesEncryptionKeyManagerActor_initWithACModuleContext_(ImDiyalogCoreModulesEncryptionKeyManagerActor *self, id<ACModuleContext> context);

FOUNDATION_EXPORT ImDiyalogCoreModulesEncryptionKeyManagerActor *new_ImDiyalogCoreModulesEncryptionKeyManagerActor_initWithACModuleContext_(id<ACModuleContext> context) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ImDiyalogCoreModulesEncryptionKeyManagerActor *create_ImDiyalogCoreModulesEncryptionKeyManagerActor_initWithACModuleContext_(id<ACModuleContext> context);

J2OBJC_TYPE_LITERAL_HEADER(ImDiyalogCoreModulesEncryptionKeyManagerActor)

#endif

#if !defined (ImDiyalogCoreModulesEncryptionKeyManagerActor_FetchOwnKey_) && (INCLUDE_ALL_ImDiyalogCoreModulesEncryptionKeyManagerActor || defined(INCLUDE_ImDiyalogCoreModulesEncryptionKeyManagerActor_FetchOwnKey))
#define ImDiyalogCoreModulesEncryptionKeyManagerActor_FetchOwnKey_

#define RESTRICT_ImDiyalogRuntimeActorsAskAskMessage 1
#define INCLUDE_ImDiyalogRuntimeActorsAskAskMessage 1
#include "../../../../../im/diyalog/runtime/actors/ask/AskMessage.h"

@interface ImDiyalogCoreModulesEncryptionKeyManagerActor_FetchOwnKey : NSObject < ImDiyalogRuntimeActorsAskAskMessage >

#pragma mark Public

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ImDiyalogCoreModulesEncryptionKeyManagerActor_FetchOwnKey)

FOUNDATION_EXPORT void ImDiyalogCoreModulesEncryptionKeyManagerActor_FetchOwnKey_init(ImDiyalogCoreModulesEncryptionKeyManagerActor_FetchOwnKey *self);

FOUNDATION_EXPORT ImDiyalogCoreModulesEncryptionKeyManagerActor_FetchOwnKey *new_ImDiyalogCoreModulesEncryptionKeyManagerActor_FetchOwnKey_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ImDiyalogCoreModulesEncryptionKeyManagerActor_FetchOwnKey *create_ImDiyalogCoreModulesEncryptionKeyManagerActor_FetchOwnKey_init();

J2OBJC_TYPE_LITERAL_HEADER(ImDiyalogCoreModulesEncryptionKeyManagerActor_FetchOwnKey)

#endif

#if !defined (ImDiyalogCoreModulesEncryptionKeyManagerActor_OwnIdentity_) && (INCLUDE_ALL_ImDiyalogCoreModulesEncryptionKeyManagerActor || defined(INCLUDE_ImDiyalogCoreModulesEncryptionKeyManagerActor_OwnIdentity))
#define ImDiyalogCoreModulesEncryptionKeyManagerActor_OwnIdentity_

#define RESTRICT_ImDiyalogRuntimeActorsAskAskResult 1
#define INCLUDE_ImDiyalogRuntimeActorsAskAskResult 1
#include "../../../../../im/diyalog/runtime/actors/ask/AskResult.h"

@class ImDiyalogCoreModulesEncryptionEntityPrivateKey;

@interface ImDiyalogCoreModulesEncryptionKeyManagerActor_OwnIdentity : ImDiyalogRuntimeActorsAskAskResult

#pragma mark Public

- (instancetype)initWithInt:(jint)keyGroup
withImDiyalogCoreModulesEncryptionEntityPrivateKey:(ImDiyalogCoreModulesEncryptionEntityPrivateKey *)identityKey;

- (ImDiyalogCoreModulesEncryptionEntityPrivateKey *)getIdentityKey;

- (jint)getKeyGroup;

@end

J2OBJC_EMPTY_STATIC_INIT(ImDiyalogCoreModulesEncryptionKeyManagerActor_OwnIdentity)

FOUNDATION_EXPORT void ImDiyalogCoreModulesEncryptionKeyManagerActor_OwnIdentity_initWithInt_withImDiyalogCoreModulesEncryptionEntityPrivateKey_(ImDiyalogCoreModulesEncryptionKeyManagerActor_OwnIdentity *self, jint keyGroup, ImDiyalogCoreModulesEncryptionEntityPrivateKey *identityKey);

FOUNDATION_EXPORT ImDiyalogCoreModulesEncryptionKeyManagerActor_OwnIdentity *new_ImDiyalogCoreModulesEncryptionKeyManagerActor_OwnIdentity_initWithInt_withImDiyalogCoreModulesEncryptionEntityPrivateKey_(jint keyGroup, ImDiyalogCoreModulesEncryptionEntityPrivateKey *identityKey) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ImDiyalogCoreModulesEncryptionKeyManagerActor_OwnIdentity *create_ImDiyalogCoreModulesEncryptionKeyManagerActor_OwnIdentity_initWithInt_withImDiyalogCoreModulesEncryptionEntityPrivateKey_(jint keyGroup, ImDiyalogCoreModulesEncryptionEntityPrivateKey *identityKey);

J2OBJC_TYPE_LITERAL_HEADER(ImDiyalogCoreModulesEncryptionKeyManagerActor_OwnIdentity)

#endif

#if !defined (ImDiyalogCoreModulesEncryptionKeyManagerActor_FetchOwnRandomPreKey_) && (INCLUDE_ALL_ImDiyalogCoreModulesEncryptionKeyManagerActor || defined(INCLUDE_ImDiyalogCoreModulesEncryptionKeyManagerActor_FetchOwnRandomPreKey))
#define ImDiyalogCoreModulesEncryptionKeyManagerActor_FetchOwnRandomPreKey_

#define RESTRICT_ImDiyalogRuntimeActorsAskAskMessage 1
#define INCLUDE_ImDiyalogRuntimeActorsAskAskMessage 1
#include "../../../../../im/diyalog/runtime/actors/ask/AskMessage.h"

@interface ImDiyalogCoreModulesEncryptionKeyManagerActor_FetchOwnRandomPreKey : NSObject < ImDiyalogRuntimeActorsAskAskMessage >

#pragma mark Public

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ImDiyalogCoreModulesEncryptionKeyManagerActor_FetchOwnRandomPreKey)

FOUNDATION_EXPORT void ImDiyalogCoreModulesEncryptionKeyManagerActor_FetchOwnRandomPreKey_init(ImDiyalogCoreModulesEncryptionKeyManagerActor_FetchOwnRandomPreKey *self);

FOUNDATION_EXPORT ImDiyalogCoreModulesEncryptionKeyManagerActor_FetchOwnRandomPreKey *new_ImDiyalogCoreModulesEncryptionKeyManagerActor_FetchOwnRandomPreKey_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ImDiyalogCoreModulesEncryptionKeyManagerActor_FetchOwnRandomPreKey *create_ImDiyalogCoreModulesEncryptionKeyManagerActor_FetchOwnRandomPreKey_init();

J2OBJC_TYPE_LITERAL_HEADER(ImDiyalogCoreModulesEncryptionKeyManagerActor_FetchOwnRandomPreKey)

#endif

#if !defined (ImDiyalogCoreModulesEncryptionKeyManagerActor_FetchOwnPreKeyByPublic_) && (INCLUDE_ALL_ImDiyalogCoreModulesEncryptionKeyManagerActor || defined(INCLUDE_ImDiyalogCoreModulesEncryptionKeyManagerActor_FetchOwnPreKeyByPublic))
#define ImDiyalogCoreModulesEncryptionKeyManagerActor_FetchOwnPreKeyByPublic_

#define RESTRICT_ImDiyalogRuntimeActorsAskAskMessage 1
#define INCLUDE_ImDiyalogRuntimeActorsAskAskMessage 1
#include "../../../../../im/diyalog/runtime/actors/ask/AskMessage.h"

@class IOSByteArray;

@interface ImDiyalogCoreModulesEncryptionKeyManagerActor_FetchOwnPreKeyByPublic : NSObject < ImDiyalogRuntimeActorsAskAskMessage >

#pragma mark Public

- (instancetype)initWithByteArray:(IOSByteArray *)publicKey;

- (IOSByteArray *)getPublicKey;

@end

J2OBJC_EMPTY_STATIC_INIT(ImDiyalogCoreModulesEncryptionKeyManagerActor_FetchOwnPreKeyByPublic)

FOUNDATION_EXPORT void ImDiyalogCoreModulesEncryptionKeyManagerActor_FetchOwnPreKeyByPublic_initWithByteArray_(ImDiyalogCoreModulesEncryptionKeyManagerActor_FetchOwnPreKeyByPublic *self, IOSByteArray *publicKey);

FOUNDATION_EXPORT ImDiyalogCoreModulesEncryptionKeyManagerActor_FetchOwnPreKeyByPublic *new_ImDiyalogCoreModulesEncryptionKeyManagerActor_FetchOwnPreKeyByPublic_initWithByteArray_(IOSByteArray *publicKey) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ImDiyalogCoreModulesEncryptionKeyManagerActor_FetchOwnPreKeyByPublic *create_ImDiyalogCoreModulesEncryptionKeyManagerActor_FetchOwnPreKeyByPublic_initWithByteArray_(IOSByteArray *publicKey);

J2OBJC_TYPE_LITERAL_HEADER(ImDiyalogCoreModulesEncryptionKeyManagerActor_FetchOwnPreKeyByPublic)

#endif

#if !defined (ImDiyalogCoreModulesEncryptionKeyManagerActor_FetchOwnPreKeyById_) && (INCLUDE_ALL_ImDiyalogCoreModulesEncryptionKeyManagerActor || defined(INCLUDE_ImDiyalogCoreModulesEncryptionKeyManagerActor_FetchOwnPreKeyById))
#define ImDiyalogCoreModulesEncryptionKeyManagerActor_FetchOwnPreKeyById_

#define RESTRICT_ImDiyalogRuntimeActorsAskAskMessage 1
#define INCLUDE_ImDiyalogRuntimeActorsAskAskMessage 1
#include "../../../../../im/diyalog/runtime/actors/ask/AskMessage.h"

@interface ImDiyalogCoreModulesEncryptionKeyManagerActor_FetchOwnPreKeyById : NSObject < ImDiyalogRuntimeActorsAskAskMessage >

#pragma mark Public

- (instancetype)initWithLong:(jlong)keyId;

- (jlong)getKeyId;

@end

J2OBJC_EMPTY_STATIC_INIT(ImDiyalogCoreModulesEncryptionKeyManagerActor_FetchOwnPreKeyById)

FOUNDATION_EXPORT void ImDiyalogCoreModulesEncryptionKeyManagerActor_FetchOwnPreKeyById_initWithLong_(ImDiyalogCoreModulesEncryptionKeyManagerActor_FetchOwnPreKeyById *self, jlong keyId);

FOUNDATION_EXPORT ImDiyalogCoreModulesEncryptionKeyManagerActor_FetchOwnPreKeyById *new_ImDiyalogCoreModulesEncryptionKeyManagerActor_FetchOwnPreKeyById_initWithLong_(jlong keyId) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ImDiyalogCoreModulesEncryptionKeyManagerActor_FetchOwnPreKeyById *create_ImDiyalogCoreModulesEncryptionKeyManagerActor_FetchOwnPreKeyById_initWithLong_(jlong keyId);

J2OBJC_TYPE_LITERAL_HEADER(ImDiyalogCoreModulesEncryptionKeyManagerActor_FetchOwnPreKeyById)

#endif

#if !defined (ImDiyalogCoreModulesEncryptionKeyManagerActor_FetchUserKeys_) && (INCLUDE_ALL_ImDiyalogCoreModulesEncryptionKeyManagerActor || defined(INCLUDE_ImDiyalogCoreModulesEncryptionKeyManagerActor_FetchUserKeys))
#define ImDiyalogCoreModulesEncryptionKeyManagerActor_FetchUserKeys_

#define RESTRICT_ImDiyalogRuntimeActorsAskAskMessage 1
#define INCLUDE_ImDiyalogRuntimeActorsAskAskMessage 1
#include "../../../../../im/diyalog/runtime/actors/ask/AskMessage.h"

@interface ImDiyalogCoreModulesEncryptionKeyManagerActor_FetchUserKeys : NSObject < ImDiyalogRuntimeActorsAskAskMessage >

#pragma mark Public

- (instancetype)initWithInt:(jint)uid;

- (jint)getUid;

@end

J2OBJC_EMPTY_STATIC_INIT(ImDiyalogCoreModulesEncryptionKeyManagerActor_FetchUserKeys)

FOUNDATION_EXPORT void ImDiyalogCoreModulesEncryptionKeyManagerActor_FetchUserKeys_initWithInt_(ImDiyalogCoreModulesEncryptionKeyManagerActor_FetchUserKeys *self, jint uid);

FOUNDATION_EXPORT ImDiyalogCoreModulesEncryptionKeyManagerActor_FetchUserKeys *new_ImDiyalogCoreModulesEncryptionKeyManagerActor_FetchUserKeys_initWithInt_(jint uid) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ImDiyalogCoreModulesEncryptionKeyManagerActor_FetchUserKeys *create_ImDiyalogCoreModulesEncryptionKeyManagerActor_FetchUserKeys_initWithInt_(jint uid);

J2OBJC_TYPE_LITERAL_HEADER(ImDiyalogCoreModulesEncryptionKeyManagerActor_FetchUserKeys)

#endif

#if !defined (ImDiyalogCoreModulesEncryptionKeyManagerActor_FetchUserPreKey_) && (INCLUDE_ALL_ImDiyalogCoreModulesEncryptionKeyManagerActor || defined(INCLUDE_ImDiyalogCoreModulesEncryptionKeyManagerActor_FetchUserPreKey))
#define ImDiyalogCoreModulesEncryptionKeyManagerActor_FetchUserPreKey_

#define RESTRICT_ImDiyalogRuntimeActorsAskAskMessage 1
#define INCLUDE_ImDiyalogRuntimeActorsAskAskMessage 1
#include "../../../../../im/diyalog/runtime/actors/ask/AskMessage.h"

@interface ImDiyalogCoreModulesEncryptionKeyManagerActor_FetchUserPreKey : NSObject < ImDiyalogRuntimeActorsAskAskMessage >

#pragma mark Public

- (instancetype)initWithInt:(jint)uid
                    withInt:(jint)keyGroup
                   withLong:(jlong)keyId;

- (jint)getKeyGroup;

- (jlong)getKeyId;

- (jint)getUid;

@end

J2OBJC_EMPTY_STATIC_INIT(ImDiyalogCoreModulesEncryptionKeyManagerActor_FetchUserPreKey)

FOUNDATION_EXPORT void ImDiyalogCoreModulesEncryptionKeyManagerActor_FetchUserPreKey_initWithInt_withInt_withLong_(ImDiyalogCoreModulesEncryptionKeyManagerActor_FetchUserPreKey *self, jint uid, jint keyGroup, jlong keyId);

FOUNDATION_EXPORT ImDiyalogCoreModulesEncryptionKeyManagerActor_FetchUserPreKey *new_ImDiyalogCoreModulesEncryptionKeyManagerActor_FetchUserPreKey_initWithInt_withInt_withLong_(jint uid, jint keyGroup, jlong keyId) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ImDiyalogCoreModulesEncryptionKeyManagerActor_FetchUserPreKey *create_ImDiyalogCoreModulesEncryptionKeyManagerActor_FetchUserPreKey_initWithInt_withInt_withLong_(jint uid, jint keyGroup, jlong keyId);

J2OBJC_TYPE_LITERAL_HEADER(ImDiyalogCoreModulesEncryptionKeyManagerActor_FetchUserPreKey)

#endif

#if !defined (ImDiyalogCoreModulesEncryptionKeyManagerActor_FetchUserPreKeyRandom_) && (INCLUDE_ALL_ImDiyalogCoreModulesEncryptionKeyManagerActor || defined(INCLUDE_ImDiyalogCoreModulesEncryptionKeyManagerActor_FetchUserPreKeyRandom))
#define ImDiyalogCoreModulesEncryptionKeyManagerActor_FetchUserPreKeyRandom_

#define RESTRICT_ImDiyalogRuntimeActorsAskAskMessage 1
#define INCLUDE_ImDiyalogRuntimeActorsAskAskMessage 1
#include "../../../../../im/diyalog/runtime/actors/ask/AskMessage.h"

@interface ImDiyalogCoreModulesEncryptionKeyManagerActor_FetchUserPreKeyRandom : NSObject < ImDiyalogRuntimeActorsAskAskMessage >

#pragma mark Public

- (instancetype)initWithInt:(jint)uid
                    withInt:(jint)keyGroup;

- (jint)getKeyGroup;

- (jint)getUid;

@end

J2OBJC_EMPTY_STATIC_INIT(ImDiyalogCoreModulesEncryptionKeyManagerActor_FetchUserPreKeyRandom)

FOUNDATION_EXPORT void ImDiyalogCoreModulesEncryptionKeyManagerActor_FetchUserPreKeyRandom_initWithInt_withInt_(ImDiyalogCoreModulesEncryptionKeyManagerActor_FetchUserPreKeyRandom *self, jint uid, jint keyGroup);

FOUNDATION_EXPORT ImDiyalogCoreModulesEncryptionKeyManagerActor_FetchUserPreKeyRandom *new_ImDiyalogCoreModulesEncryptionKeyManagerActor_FetchUserPreKeyRandom_initWithInt_withInt_(jint uid, jint keyGroup) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ImDiyalogCoreModulesEncryptionKeyManagerActor_FetchUserPreKeyRandom *create_ImDiyalogCoreModulesEncryptionKeyManagerActor_FetchUserPreKeyRandom_initWithInt_withInt_(jint uid, jint keyGroup);

J2OBJC_TYPE_LITERAL_HEADER(ImDiyalogCoreModulesEncryptionKeyManagerActor_FetchUserPreKeyRandom)

#endif

#if !defined (ImDiyalogCoreModulesEncryptionKeyManagerActor_PublicKeysGroupAdded_) && (INCLUDE_ALL_ImDiyalogCoreModulesEncryptionKeyManagerActor || defined(INCLUDE_ImDiyalogCoreModulesEncryptionKeyManagerActor_PublicKeysGroupAdded))
#define ImDiyalogCoreModulesEncryptionKeyManagerActor_PublicKeysGroupAdded_

@class ARApiEncryptionKeyGroup;

@interface ImDiyalogCoreModulesEncryptionKeyManagerActor_PublicKeysGroupAdded : NSObject

#pragma mark Public

- (instancetype)initWithInt:(jint)uid
withARApiEncryptionKeyGroup:(ARApiEncryptionKeyGroup *)publicKeyGroup;

- (ARApiEncryptionKeyGroup *)getPublicKeyGroup;

- (jint)getUid;

@end

J2OBJC_EMPTY_STATIC_INIT(ImDiyalogCoreModulesEncryptionKeyManagerActor_PublicKeysGroupAdded)

FOUNDATION_EXPORT void ImDiyalogCoreModulesEncryptionKeyManagerActor_PublicKeysGroupAdded_initWithInt_withARApiEncryptionKeyGroup_(ImDiyalogCoreModulesEncryptionKeyManagerActor_PublicKeysGroupAdded *self, jint uid, ARApiEncryptionKeyGroup *publicKeyGroup);

FOUNDATION_EXPORT ImDiyalogCoreModulesEncryptionKeyManagerActor_PublicKeysGroupAdded *new_ImDiyalogCoreModulesEncryptionKeyManagerActor_PublicKeysGroupAdded_initWithInt_withARApiEncryptionKeyGroup_(jint uid, ARApiEncryptionKeyGroup *publicKeyGroup) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ImDiyalogCoreModulesEncryptionKeyManagerActor_PublicKeysGroupAdded *create_ImDiyalogCoreModulesEncryptionKeyManagerActor_PublicKeysGroupAdded_initWithInt_withARApiEncryptionKeyGroup_(jint uid, ARApiEncryptionKeyGroup *publicKeyGroup);

J2OBJC_TYPE_LITERAL_HEADER(ImDiyalogCoreModulesEncryptionKeyManagerActor_PublicKeysGroupAdded)

#endif

#if !defined (ImDiyalogCoreModulesEncryptionKeyManagerActor_PublicKeysGroupRemoved_) && (INCLUDE_ALL_ImDiyalogCoreModulesEncryptionKeyManagerActor || defined(INCLUDE_ImDiyalogCoreModulesEncryptionKeyManagerActor_PublicKeysGroupRemoved))
#define ImDiyalogCoreModulesEncryptionKeyManagerActor_PublicKeysGroupRemoved_

@interface ImDiyalogCoreModulesEncryptionKeyManagerActor_PublicKeysGroupRemoved : NSObject

#pragma mark Public

- (instancetype)initWithInt:(jint)uid
                    withInt:(jint)keyGroupId;

- (jint)getKeyGroupId;

- (jint)getUid;

@end

J2OBJC_EMPTY_STATIC_INIT(ImDiyalogCoreModulesEncryptionKeyManagerActor_PublicKeysGroupRemoved)

FOUNDATION_EXPORT void ImDiyalogCoreModulesEncryptionKeyManagerActor_PublicKeysGroupRemoved_initWithInt_withInt_(ImDiyalogCoreModulesEncryptionKeyManagerActor_PublicKeysGroupRemoved *self, jint uid, jint keyGroupId);

FOUNDATION_EXPORT ImDiyalogCoreModulesEncryptionKeyManagerActor_PublicKeysGroupRemoved *new_ImDiyalogCoreModulesEncryptionKeyManagerActor_PublicKeysGroupRemoved_initWithInt_withInt_(jint uid, jint keyGroupId) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ImDiyalogCoreModulesEncryptionKeyManagerActor_PublicKeysGroupRemoved *create_ImDiyalogCoreModulesEncryptionKeyManagerActor_PublicKeysGroupRemoved_initWithInt_withInt_(jint uid, jint keyGroupId);

J2OBJC_TYPE_LITERAL_HEADER(ImDiyalogCoreModulesEncryptionKeyManagerActor_PublicKeysGroupRemoved)

#endif


#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_ImDiyalogCoreModulesEncryptionKeyManagerActor")
