//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/DATA/Diyalog/sdk-core/core/core-shared/src/main/java/im/diyalog/core/modules/groups/GroupsProcessor.java
//

@import j2objc;

#pragma push_macro("INCLUDE_ALL_ImDiyalogCoreModulesGroupsGroupsProcessor")
#ifdef RESTRICT_ImDiyalogCoreModulesGroupsGroupsProcessor
#define INCLUDE_ALL_ImDiyalogCoreModulesGroupsGroupsProcessor 0
#else
#define INCLUDE_ALL_ImDiyalogCoreModulesGroupsGroupsProcessor 1
#endif
#undef RESTRICT_ImDiyalogCoreModulesGroupsGroupsProcessor

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if !defined (ImDiyalogCoreModulesGroupsGroupsProcessor_) && (INCLUDE_ALL_ImDiyalogCoreModulesGroupsGroupsProcessor || defined(INCLUDE_ImDiyalogCoreModulesGroupsGroupsProcessor))
#define ImDiyalogCoreModulesGroupsGroupsProcessor_

#define RESTRICT_ImDiyalogCoreModulesAbsModule 1
#define INCLUDE_ACAbsModule 1
#include "../../../../../im/diyalog/core/modules/AbsModule.h"

@class ARApiAvatar;
@protocol ACModuleContext;
@protocol JavaUtilCollection;
@protocol JavaUtilList;

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

@interface ImDiyalogCoreModulesGroupsGroupsProcessor : ACAbsModule

#pragma mark Public

- (instancetype)initWithACModuleContext:(id<ACModuleContext>)context;

- (void)applyGroupsWithJavaUtilCollection:(id<JavaUtilCollection>)updated
                              withBoolean:(jboolean)forced;

- (jboolean)hasGroupsWithJavaUtilCollection:(id<JavaUtilCollection>)gids;

- (void)onAboutChangedWithInt:(jint)groupId
                 withNSString:(NSString *)about;

- (void)onAvatarChangedWithInt:(jint)groupId
                      withLong:(jlong)rid
                       withInt:(jint)uid
               withARApiAvatar:(ARApiAvatar * __nullable)avatar
                      withLong:(jlong)date
                   withBoolean:(jboolean)isSilent;

- (void)onGroupInviteWithInt:(jint)groupId
                    withLong:(jlong)rid
                     withInt:(jint)inviterId
                    withLong:(jlong)date
                 withBoolean:(jboolean)isSilent;

- (void)onMembersUpdatedWithInt:(jint)groupId
               withJavaUtilList:(id<JavaUtilList>)members;

- (void)onTitleChangedWithInt:(jint)groupId
                     withLong:(jlong)rid
                      withInt:(jint)uid
                 withNSString:(NSString *)title
                     withLong:(jlong)date
                  withBoolean:(jboolean)isSilent;

- (void)onTopicChangedWithInt:(jint)groupId
                 withNSString:(NSString *)topic;

- (void)onUserAddedWithInt:(jint)groupId
                  withLong:(jlong)rid
                   withInt:(jint)uid
                   withInt:(jint)adder
                  withLong:(jlong)date
               withBoolean:(jboolean)isSilent;

- (void)onUserKickedWithInt:(jint)groupId
                   withLong:(jlong)rid
                    withInt:(jint)uid
                    withInt:(jint)kicker
                   withLong:(jlong)date
                withBoolean:(jboolean)isSilent;

- (void)onUserLeaveWithInt:(jint)groupId
                  withLong:(jlong)rid
                   withInt:(jint)uid
                  withLong:(jlong)date
               withBoolean:(jboolean)isSilent;

- (void)resetProcessor;

@end

J2OBJC_EMPTY_STATIC_INIT(ImDiyalogCoreModulesGroupsGroupsProcessor)

FOUNDATION_EXPORT void ImDiyalogCoreModulesGroupsGroupsProcessor_initWithACModuleContext_(ImDiyalogCoreModulesGroupsGroupsProcessor *self, id<ACModuleContext> context);

FOUNDATION_EXPORT ImDiyalogCoreModulesGroupsGroupsProcessor *new_ImDiyalogCoreModulesGroupsGroupsProcessor_initWithACModuleContext_(id<ACModuleContext> context) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ImDiyalogCoreModulesGroupsGroupsProcessor *create_ImDiyalogCoreModulesGroupsGroupsProcessor_initWithACModuleContext_(id<ACModuleContext> context);

J2OBJC_TYPE_LITERAL_HEADER(ImDiyalogCoreModulesGroupsGroupsProcessor)

#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#endif


#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_ImDiyalogCoreModulesGroupsGroupsProcessor")
