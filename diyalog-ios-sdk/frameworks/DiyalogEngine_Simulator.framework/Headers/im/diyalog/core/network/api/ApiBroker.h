//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/DATA/Diyalog/sdk-core/core/core-shared/src/main/java/im/diyalog/core/network/api/ApiBroker.java
//

@import j2objc;

#pragma push_macro("INCLUDE_ALL_ImDiyalogCoreNetworkApiApiBroker")
#ifdef RESTRICT_ImDiyalogCoreNetworkApiApiBroker
#define INCLUDE_ALL_ImDiyalogCoreNetworkApiApiBroker 0
#else
#define INCLUDE_ALL_ImDiyalogCoreNetworkApiApiBroker 1
#endif
#undef RESTRICT_ImDiyalogCoreNetworkApiApiBroker

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if !defined (ACApiBroker_) && (INCLUDE_ALL_ImDiyalogCoreNetworkApiApiBroker || defined(INCLUDE_ACApiBroker))
#define ACApiBroker_

#define RESTRICT_ImDiyalogRuntimeActorsActor 1
#define INCLUDE_ARActor 1
#include "../../../../../im/diyalog/runtime/actors/Actor.h"

@class ACApiParserConfig;
@class ACEndpoints;
@class ARActorRef;
@protocol ACAuthKeyStorage;
@protocol ACDiyalogApiCallback;

@interface ACApiBroker : ARActor

#pragma mark Public

- (instancetype)initWithACEndpoints:(ACEndpoints *)endpoints
               withACAuthKeyStorage:(id<ACAuthKeyStorage>)keyStorage
           withACDiyalogApiCallback:(id<ACDiyalogApiCallback>)callback
                        withBoolean:(jboolean)isEnableLog
                            withInt:(jint)minDelay
                            withInt:(jint)maxDelay
                            withInt:(jint)maxFailureCount
              withACApiParserConfig:(ACApiParserConfig *)parserConfig;

+ (ARActorRef *)getWithACEndpoints:(ACEndpoints *)endpoints
              withACAuthKeyStorage:(id<ACAuthKeyStorage>)keyStorage
          withACDiyalogApiCallback:(id<ACDiyalogApiCallback>)callback
                       withBoolean:(jboolean)isEnableLog
                           withInt:(jint)id_
                           withInt:(jint)minDelay
                           withInt:(jint)maxDelay
                           withInt:(jint)maxFailureCount
             withACApiParserConfig:(ACApiParserConfig *)parserConfig;

- (void)onReceiveWithId:(id)message;

- (void)postStop;

- (void)preStart;

#pragma mark Package-Private

- (void)connectionCountChangedWithInt:(jint)count;

@end

J2OBJC_STATIC_INIT(ACApiBroker)

FOUNDATION_EXPORT ARActorRef *ACApiBroker_getWithACEndpoints_withACAuthKeyStorage_withACDiyalogApiCallback_withBoolean_withInt_withInt_withInt_withInt_withACApiParserConfig_(ACEndpoints *endpoints, id<ACAuthKeyStorage> keyStorage, id<ACDiyalogApiCallback> callback, jboolean isEnableLog, jint id_, jint minDelay, jint maxDelay, jint maxFailureCount, ACApiParserConfig *parserConfig);

FOUNDATION_EXPORT void ACApiBroker_initWithACEndpoints_withACAuthKeyStorage_withACDiyalogApiCallback_withBoolean_withInt_withInt_withInt_withACApiParserConfig_(ACApiBroker *self, ACEndpoints *endpoints, id<ACAuthKeyStorage> keyStorage, id<ACDiyalogApiCallback> callback, jboolean isEnableLog, jint minDelay, jint maxDelay, jint maxFailureCount, ACApiParserConfig *parserConfig);

FOUNDATION_EXPORT ACApiBroker *new_ACApiBroker_initWithACEndpoints_withACAuthKeyStorage_withACDiyalogApiCallback_withBoolean_withInt_withInt_withInt_withACApiParserConfig_(ACEndpoints *endpoints, id<ACAuthKeyStorage> keyStorage, id<ACDiyalogApiCallback> callback, jboolean isEnableLog, jint minDelay, jint maxDelay, jint maxFailureCount, ACApiParserConfig *parserConfig) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ACApiBroker *create_ACApiBroker_initWithACEndpoints_withACAuthKeyStorage_withACDiyalogApiCallback_withBoolean_withInt_withInt_withInt_withACApiParserConfig_(ACEndpoints *endpoints, id<ACAuthKeyStorage> keyStorage, id<ACDiyalogApiCallback> callback, jboolean isEnableLog, jint minDelay, jint maxDelay, jint maxFailureCount, ACApiParserConfig *parserConfig);

J2OBJC_TYPE_LITERAL_HEADER(ACApiBroker)

@compatibility_alias ImDiyalogCoreNetworkApiApiBroker ACApiBroker;

#endif

#if !defined (ACApiBroker_PerformRequest_) && (INCLUDE_ALL_ImDiyalogCoreNetworkApiApiBroker || defined(INCLUDE_ACApiBroker_PerformRequest))
#define ACApiBroker_PerformRequest_

@class ACRequest;
@protocol ACRpcCallback;

@interface ACApiBroker_PerformRequest : NSObject

#pragma mark Public

- (instancetype)initWithLong:(jlong)rid
               withACRequest:(ACRequest *)message
           withACRpcCallback:(id<ACRpcCallback>)callback;

- (id<ACRpcCallback>)getCallback;

- (ACRequest *)getMessage;

- (jlong)getRid;

@end

J2OBJC_EMPTY_STATIC_INIT(ACApiBroker_PerformRequest)

FOUNDATION_EXPORT void ACApiBroker_PerformRequest_initWithLong_withACRequest_withACRpcCallback_(ACApiBroker_PerformRequest *self, jlong rid, ACRequest *message, id<ACRpcCallback> callback);

FOUNDATION_EXPORT ACApiBroker_PerformRequest *new_ACApiBroker_PerformRequest_initWithLong_withACRequest_withACRpcCallback_(jlong rid, ACRequest *message, id<ACRpcCallback> callback) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ACApiBroker_PerformRequest *create_ACApiBroker_PerformRequest_initWithLong_withACRequest_withACRpcCallback_(jlong rid, ACRequest *message, id<ACRpcCallback> callback);

J2OBJC_TYPE_LITERAL_HEADER(ACApiBroker_PerformRequest)

#endif

#if !defined (ACApiBroker_CancelRequest_) && (INCLUDE_ALL_ImDiyalogCoreNetworkApiApiBroker || defined(INCLUDE_ACApiBroker_CancelRequest))
#define ACApiBroker_CancelRequest_

@interface ACApiBroker_CancelRequest : NSObject

#pragma mark Public

- (instancetype)initWithLong:(jlong)randomId;

- (jlong)getRandomId;

@end

J2OBJC_EMPTY_STATIC_INIT(ACApiBroker_CancelRequest)

FOUNDATION_EXPORT void ACApiBroker_CancelRequest_initWithLong_(ACApiBroker_CancelRequest *self, jlong randomId);

FOUNDATION_EXPORT ACApiBroker_CancelRequest *new_ACApiBroker_CancelRequest_initWithLong_(jlong randomId) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ACApiBroker_CancelRequest *create_ACApiBroker_CancelRequest_initWithLong_(jlong randomId);

J2OBJC_TYPE_LITERAL_HEADER(ACApiBroker_CancelRequest)

#endif

#if !defined (ACApiBroker_NetworkChanged_) && (INCLUDE_ALL_ImDiyalogCoreNetworkApiApiBroker || defined(INCLUDE_ACApiBroker_NetworkChanged))
#define ACApiBroker_NetworkChanged_

@class ACNetworkState;

@interface ACApiBroker_NetworkChanged : NSObject

#pragma mark Public

- (instancetype)initWithACNetworkState:(ACNetworkState *)state;

- (ACNetworkState *)getState;

@end

J2OBJC_EMPTY_STATIC_INIT(ACApiBroker_NetworkChanged)

FOUNDATION_EXPORT void ACApiBroker_NetworkChanged_initWithACNetworkState_(ACApiBroker_NetworkChanged *self, ACNetworkState *state);

FOUNDATION_EXPORT ACApiBroker_NetworkChanged *new_ACApiBroker_NetworkChanged_initWithACNetworkState_(ACNetworkState *state) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ACApiBroker_NetworkChanged *create_ACApiBroker_NetworkChanged_initWithACNetworkState_(ACNetworkState *state);

J2OBJC_TYPE_LITERAL_HEADER(ACApiBroker_NetworkChanged)

#endif

#if !defined (ACApiBroker_ForceNetworkCheck_) && (INCLUDE_ALL_ImDiyalogCoreNetworkApiApiBroker || defined(INCLUDE_ACApiBroker_ForceNetworkCheck))
#define ACApiBroker_ForceNetworkCheck_

@interface ACApiBroker_ForceNetworkCheck : NSObject

#pragma mark Public

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ACApiBroker_ForceNetworkCheck)

FOUNDATION_EXPORT void ACApiBroker_ForceNetworkCheck_init(ACApiBroker_ForceNetworkCheck *self);

FOUNDATION_EXPORT ACApiBroker_ForceNetworkCheck *new_ACApiBroker_ForceNetworkCheck_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ACApiBroker_ForceNetworkCheck *create_ACApiBroker_ForceNetworkCheck_init();

J2OBJC_TYPE_LITERAL_HEADER(ACApiBroker_ForceNetworkCheck)

#endif

#if !defined (ACApiBroker_InitMtProtoAgain_) && (INCLUDE_ALL_ImDiyalogCoreNetworkApiApiBroker || defined(INCLUDE_ACApiBroker_InitMtProtoAgain))
#define ACApiBroker_InitMtProtoAgain_

@interface ACApiBroker_InitMtProtoAgain : NSObject

#pragma mark Public

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ACApiBroker_InitMtProtoAgain)

FOUNDATION_EXPORT void ACApiBroker_InitMtProtoAgain_init(ACApiBroker_InitMtProtoAgain *self);

FOUNDATION_EXPORT ACApiBroker_InitMtProtoAgain *new_ACApiBroker_InitMtProtoAgain_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ACApiBroker_InitMtProtoAgain *create_ACApiBroker_InitMtProtoAgain_init();

J2OBJC_TYPE_LITERAL_HEADER(ACApiBroker_InitMtProtoAgain)

#endif


#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_ImDiyalogCoreNetworkApiApiBroker")
