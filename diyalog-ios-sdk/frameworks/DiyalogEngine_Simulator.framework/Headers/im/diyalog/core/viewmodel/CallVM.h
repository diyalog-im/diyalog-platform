//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/DATA/Diyalog/sdk-core/core/core-shared/src/main/java/im/diyalog/core/viewmodel/CallVM.java
//

@import j2objc;

#pragma push_macro("INCLUDE_ALL_ImDiyalogCoreViewmodelCallVM")
#ifdef RESTRICT_ImDiyalogCoreViewmodelCallVM
#define INCLUDE_ALL_ImDiyalogCoreViewmodelCallVM 0
#else
#define INCLUDE_ALL_ImDiyalogCoreViewmodelCallVM 1
#endif
#undef RESTRICT_ImDiyalogCoreViewmodelCallVM

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if !defined (ACCallVM_) && (INCLUDE_ALL_ImDiyalogCoreViewmodelCallVM || defined(INCLUDE_ACCallVM))
#define ACCallVM_

@class ACBooleanValueModel;
@class ACCallState;
@class ACPeer;
@class ARValueModel;
@class JavaUtilArrayList;

@interface ACCallVM : NSObject
@property (readonly, nonatomic, getter=getCallId) jlong callId;
@property (readonly, nonatomic, getter=getPeer) ACPeer *peer;
@property (readonly, nonatomic, getter=getState) ARValueModel *state;
@property (readonly, nonatomic, getter=getMembers) ARValueModel *members;
@property (readonly, nonatomic, getter=getIsMuted) ACBooleanValueModel *isMuted;
@property (readonly, nonatomic, getter=getCallStart) jlong callStart;
@property (readonly, nonatomic, getter=getCallEnd) jlong callEnd;
@property (readonly, nonatomic, getter=isOutgoing) jboolean isOutgoing;

#pragma mark Public

- (instancetype)initWithLong:(jlong)callId
                  withACPeer:(ACPeer *)peer
                 withBoolean:(jboolean)isOutgoing
       withJavaUtilArrayList:(JavaUtilArrayList *)initialMembers
             withACCallState:(ACCallState *)state;

- (jlong)getCallEnd;

- (jlong)getCallId;

- (jlong)getCallStart;

- (ACBooleanValueModel *)getIsMuted;

- (ARValueModel *)getMembers;

- (ACPeer *)getPeer;

- (ARValueModel *)getState;

- (jboolean)isOutgoing;

- (void)setCallEndWithLong:(jlong)callEnd;

- (void)setCallStartWithLong:(jlong)callStart;

@end

J2OBJC_EMPTY_STATIC_INIT(ACCallVM)

FOUNDATION_EXPORT void ACCallVM_initWithLong_withACPeer_withBoolean_withJavaUtilArrayList_withACCallState_(ACCallVM *self, jlong callId, ACPeer *peer, jboolean isOutgoing, JavaUtilArrayList *initialMembers, ACCallState *state);

FOUNDATION_EXPORT ACCallVM *new_ACCallVM_initWithLong_withACPeer_withBoolean_withJavaUtilArrayList_withACCallState_(jlong callId, ACPeer *peer, jboolean isOutgoing, JavaUtilArrayList *initialMembers, ACCallState *state) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ACCallVM *create_ACCallVM_initWithLong_withACPeer_withBoolean_withJavaUtilArrayList_withACCallState_(jlong callId, ACPeer *peer, jboolean isOutgoing, JavaUtilArrayList *initialMembers, ACCallState *state);

J2OBJC_TYPE_LITERAL_HEADER(ACCallVM)

@compatibility_alias ImDiyalogCoreViewmodelCallVM ACCallVM;

#endif


#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_ImDiyalogCoreViewmodelCallVM")
