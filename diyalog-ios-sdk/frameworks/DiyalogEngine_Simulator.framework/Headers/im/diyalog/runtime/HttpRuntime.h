//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/DATA/Diyalog/sdk-core/runtime/runtime-shared/src/main/java/im/diyalog/runtime/HttpRuntime.java
//

@import j2objc;

#pragma push_macro("INCLUDE_ALL_ImDiyalogRuntimeHttpRuntime")
#ifdef RESTRICT_ImDiyalogRuntimeHttpRuntime
#define INCLUDE_ALL_ImDiyalogRuntimeHttpRuntime 0
#else
#define INCLUDE_ALL_ImDiyalogRuntimeHttpRuntime 1
#endif
#undef RESTRICT_ImDiyalogRuntimeHttpRuntime

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if !defined (ARHttpRuntime_) && (INCLUDE_ALL_ImDiyalogRuntimeHttpRuntime || defined(INCLUDE_ARHttpRuntime))
#define ARHttpRuntime_

@class IOSByteArray;
@protocol ARFileDownloadCallback;
@protocol ARFileUploadCallback;

/*!
 @brief HTTP Requests provider
 */
@protocol ARHttpRuntime < NSObject, JavaObject >

/*!
 @brief Get File Part
 @param url         url for downloading
 @param startOffset start offset
 @param size        size of part
 @param totalSize   total file part
 @param callback    callback for response
 */
- (void)getMethodWithUrl:(NSString *)url
         withStartOffset:(jint)startOffset
                withSize:(jint)size
           withTotalSize:(jint)totalSize
            withCallback:(id<ARFileDownloadCallback>)callback;

/*!
 @brief Put File Part.
 Always need to send only one header: Content-Type: application/octet-stream.
 @param url      url for upload
 @param contents content for upload
 @param callback callback for response
 */
- (void)putMethodWithUrl:(NSString *)url
            withContents:(IOSByteArray *)contents
            withCallback:(id<ARFileUploadCallback>)callback;

@end

J2OBJC_EMPTY_STATIC_INIT(ARHttpRuntime)

J2OBJC_TYPE_LITERAL_HEADER(ARHttpRuntime)

#define ImDiyalogRuntimeHttpRuntime ARHttpRuntime

#endif


#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_ImDiyalogRuntimeHttpRuntime")
