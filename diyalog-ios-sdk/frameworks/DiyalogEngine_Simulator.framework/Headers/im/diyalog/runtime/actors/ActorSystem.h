//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/DATA/Diyalog/sdk-core/runtime/runtime-shared/src/main/java/im/diyalog/runtime/actors/ActorSystem.java
//

@import j2objc;

#pragma push_macro("INCLUDE_ALL_ImDiyalogRuntimeActorsActorSystem")
#ifdef RESTRICT_ImDiyalogRuntimeActorsActorSystem
#define INCLUDE_ALL_ImDiyalogRuntimeActorsActorSystem 0
#else
#define INCLUDE_ALL_ImDiyalogRuntimeActorsActorSystem 1
#endif
#undef RESTRICT_ImDiyalogRuntimeActorsActorSystem

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if !defined (ARActorSystem_) && (INCLUDE_ALL_ImDiyalogRuntimeActorsActorSystem || defined(INCLUDE_ARActorSystem))
#define ARActorSystem_

@class ARActorRef;
@class ARActorSelection;
@class ARProps;
@protocol ARActorCreator;
@protocol ARActorSupervisor;
@protocol ARConstructor;
@protocol ARTraceInterface;

/*!
 @brief Entry point for Actor Model, creates all actors and dispatchers
 */
@interface ARActorSystem : NSObject

+ (jfloat)THREAD_MULTIPLIER;

+ (jint)THREAD_MAX_COUNT;

#pragma mark Public

/*!
 @brief Creating new actor system
 */
- (instancetype)init;

/*!
 @brief Creating new actor system
 */
- (instancetype)initWithBoolean:(jboolean)addDefaultDispatcher;

- (ARActorRef *)actorOfWithARActorSelection:(ARActorSelection *)selection;

/*!
 @brief Creating or getting existing actor from actor props
 @param props Actor Props
 @param path  Actor Path
 @return ActorRef
 */
- (ARActorRef *)actorOfWithARProps:(ARProps *)props
                      withNSString:(NSString *)path;

- (ARActorRef *)actorOfWithNSString:(NSString *)path
                 withARActorCreator:(id<ARActorCreator>)creator;

- (ARActorRef *)actorOfWithNSString:(NSString *)path
                 withARActorCreator:(id<ARActorCreator>)creator
              withARActorSupervisor:(id<ARActorSupervisor>)supervisor;

- (ARActorRef *)actorOfWithNSString:(NSString *)path
                  withARConstructor:(id<ARConstructor>)constructor;

- (ARActorRef *)actorOfWithNSString:(NSString *)path
                        withARProps:(ARProps *)props;

- (ARActorRef *)actorOfWithNSString:(NSString *)path
                       withNSString:(NSString *)dispatcher
                 withARActorCreator:(id<ARActorCreator>)creator;

- (ARActorRef *)actorOfWithNSString:(NSString *)path
                       withNSString:(NSString *)dispatcher
                 withARActorCreator:(id<ARActorCreator>)creator
              withARActorSupervisor:(id<ARActorSupervisor>)supervisor;

- (ARActorRef *)actorOfWithNSString:(NSString *)path
                       withNSString:(NSString *)dispatcher
                  withARConstructor:(id<ARConstructor>)constructor;

/*!
 @brief Adding dispatcher with threads count = <code>Runtime.getRuntime().availableProcessors()</code>
 @param dispatcherId dispatcher id
 */
- (void)addDispatcherWithNSString:(NSString *)dispatcherId;

/*!
 @brief Adding dispatcher with specific threads count
 @param dispatcherId dispatcher id
 @param threadsCount threads count
 */
- (void)addDispatcherWithNSString:(NSString *)dispatcherId
                          withInt:(jint)threadsCount;

/*!
 @brief Getting current trace interface for actor system
 @return trace interface
 */
- (id<ARTraceInterface>)getTraceInterface;

/*!
 @brief Setting current trace interface for actor system
 @param traceInterface trace interface
 */
- (void)setTraceInterfaceWithARTraceInterface:(id<ARTraceInterface>)traceInterface;

/*!
 @brief Main actor system
 @return ActorSystem
 */
+ (ARActorSystem *)system;

@end

J2OBJC_STATIC_INIT(ARActorSystem)

inline jfloat ARActorSystem_get_THREAD_MULTIPLIER();
#define ARActorSystem_THREAD_MULTIPLIER 1.5f
J2OBJC_STATIC_FIELD_CONSTANT(ARActorSystem, THREAD_MULTIPLIER, jfloat)

inline jint ARActorSystem_get_THREAD_MAX_COUNT();
#define ARActorSystem_THREAD_MAX_COUNT 4
J2OBJC_STATIC_FIELD_CONSTANT(ARActorSystem, THREAD_MAX_COUNT, jint)

FOUNDATION_EXPORT ARActorSystem *ARActorSystem_system();

FOUNDATION_EXPORT void ARActorSystem_init(ARActorSystem *self);

FOUNDATION_EXPORT ARActorSystem *new_ARActorSystem_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ARActorSystem *create_ARActorSystem_init();

FOUNDATION_EXPORT void ARActorSystem_initWithBoolean_(ARActorSystem *self, jboolean addDefaultDispatcher);

FOUNDATION_EXPORT ARActorSystem *new_ARActorSystem_initWithBoolean_(jboolean addDefaultDispatcher) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ARActorSystem *create_ARActorSystem_initWithBoolean_(jboolean addDefaultDispatcher);

J2OBJC_TYPE_LITERAL_HEADER(ARActorSystem)

@compatibility_alias ImDiyalogRuntimeActorsActorSystem ARActorSystem;

#endif


#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_ImDiyalogRuntimeActorsActorSystem")
