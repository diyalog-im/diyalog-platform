//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/DATA/Diyalog/sdk-core/runtime/runtime-shared/src/main/java/im/diyalog/runtime/crypto/CRC32.java
//

@import j2objc;

#pragma push_macro("INCLUDE_ALL_ImDiyalogRuntimeCryptoCRC32")
#ifdef RESTRICT_ImDiyalogRuntimeCryptoCRC32
#define INCLUDE_ALL_ImDiyalogRuntimeCryptoCRC32 0
#else
#define INCLUDE_ALL_ImDiyalogRuntimeCryptoCRC32 1
#endif
#undef RESTRICT_ImDiyalogRuntimeCryptoCRC32

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if !defined (ARCRC32_) && (INCLUDE_ALL_ImDiyalogRuntimeCryptoCRC32 || defined(INCLUDE_ARCRC32))
#define ARCRC32_

@class IOSByteArray;

/*!
 @brief CRC32 Implementation
 */
@interface ARCRC32 : NSObject

#pragma mark Public

- (instancetype)init;

/*!
 @brief Returns the CRC32 data checksum computed so far.
 */
- (jlong)getValue;

/*!
 @brief Resets the CRC32 data checksum as if no update was ever called.
 */
- (void)reset;

/*!
 @brief Adds the complete byte array to the data checksum.
 */
- (void)updateWithByteArray:(IOSByteArray *)buf;

/*!
 @brief Adds the byte array to the data checksum.
 @param buf the buffer which contains the data
 @param off the offset in the buffer where the data starts
 @param len the length of the data
 */
- (void)updateWithByteArray:(IOSByteArray *)buf
                    withInt:(jint)off
                    withInt:(jint)len;

/*!
 @brief Updates the checksum with the int bval.
 @param bval (the byte is taken as the lower 8 bits of bval)
 */
- (void)updateWithInt:(jint)bval;

@end

J2OBJC_STATIC_INIT(ARCRC32)

FOUNDATION_EXPORT void ARCRC32_init(ARCRC32 *self);

FOUNDATION_EXPORT ARCRC32 *new_ARCRC32_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ARCRC32 *create_ARCRC32_init();

J2OBJC_TYPE_LITERAL_HEADER(ARCRC32)

@compatibility_alias ImDiyalogRuntimeCryptoCRC32 ARCRC32;

#endif


#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_ImDiyalogRuntimeCryptoCRC32")
