//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/DATA/Diyalog/sdk-core/runtime/runtime-shared/src/main/java/im/diyalog/runtime/crypto/primitives/util/ByteStrings.java
//

@import j2objc;

#pragma push_macro("INCLUDE_ALL_ImDiyalogRuntimeCryptoPrimitivesUtilByteStrings")
#ifdef RESTRICT_ImDiyalogRuntimeCryptoPrimitivesUtilByteStrings
#define INCLUDE_ALL_ImDiyalogRuntimeCryptoPrimitivesUtilByteStrings 0
#else
#define INCLUDE_ALL_ImDiyalogRuntimeCryptoPrimitivesUtilByteStrings 1
#endif
#undef RESTRICT_ImDiyalogRuntimeCryptoPrimitivesUtilByteStrings

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if !defined (ImDiyalogRuntimeCryptoPrimitivesUtilByteStrings_) && (INCLUDE_ALL_ImDiyalogRuntimeCryptoPrimitivesUtilByteStrings || defined(INCLUDE_ImDiyalogRuntimeCryptoPrimitivesUtilByteStrings))
#define ImDiyalogRuntimeCryptoPrimitivesUtilByteStrings_

@class IOSByteArray;
@class IOSObjectArray;

/*!
 @brief Various binary operation on binary strings
 */
@interface ImDiyalogRuntimeCryptoPrimitivesUtilByteStrings : NSObject

#pragma mark Public

- (instancetype)init;

+ (jint)bytesToIntWithByteArray:(IOSByteArray *)data;

+ (jint)bytesToIntWithByteArray:(IOSByteArray *)data
                        withInt:(jint)offset;

+ (jlong)bytesToLongWithByteArray:(IOSByteArray *)data;

+ (jlong)bytesToLongWithByteArray:(IOSByteArray *)data
                          withInt:(jint)offset;

+ (jint)compareWithByteArray:(IOSByteArray *)a
               withByteArray:(IOSByteArray *)b;

+ (IOSByteArray *)intToBytesWithInt:(jint)v;

+ (jboolean)isEqualsWithByteArray:(IOSByteArray *)a
                    withByteArray:(IOSByteArray *)b;

+ (IOSByteArray *)longToBytesWithLong:(jlong)v;

+ (IOSByteArray *)mergeWithByteArray2:(IOSObjectArray *)data;

+ (IOSByteArray *)substringWithByteArray:(IOSByteArray *)data
                                 withInt:(jint)offset
                                 withInt:(jint)size;

+ (void)writeWithByteArray:(IOSByteArray *)dest
                   withInt:(jint)destOffset
             withByteArray:(IOSByteArray *)src
                   withInt:(jint)srcOffset
                   withInt:(jint)length;

@end

J2OBJC_EMPTY_STATIC_INIT(ImDiyalogRuntimeCryptoPrimitivesUtilByteStrings)

FOUNDATION_EXPORT IOSByteArray *ImDiyalogRuntimeCryptoPrimitivesUtilByteStrings_longToBytesWithLong_(jlong v);

FOUNDATION_EXPORT IOSByteArray *ImDiyalogRuntimeCryptoPrimitivesUtilByteStrings_intToBytesWithInt_(jint v);

FOUNDATION_EXPORT jlong ImDiyalogRuntimeCryptoPrimitivesUtilByteStrings_bytesToLongWithByteArray_(IOSByteArray *data);

FOUNDATION_EXPORT jlong ImDiyalogRuntimeCryptoPrimitivesUtilByteStrings_bytesToLongWithByteArray_withInt_(IOSByteArray *data, jint offset);

FOUNDATION_EXPORT jint ImDiyalogRuntimeCryptoPrimitivesUtilByteStrings_bytesToIntWithByteArray_(IOSByteArray *data);

FOUNDATION_EXPORT jint ImDiyalogRuntimeCryptoPrimitivesUtilByteStrings_bytesToIntWithByteArray_withInt_(IOSByteArray *data, jint offset);

FOUNDATION_EXPORT IOSByteArray *ImDiyalogRuntimeCryptoPrimitivesUtilByteStrings_substringWithByteArray_withInt_withInt_(IOSByteArray *data, jint offset, jint size);

FOUNDATION_EXPORT IOSByteArray *ImDiyalogRuntimeCryptoPrimitivesUtilByteStrings_mergeWithByteArray2_(IOSObjectArray *data);

FOUNDATION_EXPORT void ImDiyalogRuntimeCryptoPrimitivesUtilByteStrings_writeWithByteArray_withInt_withByteArray_withInt_withInt_(IOSByteArray *dest, jint destOffset, IOSByteArray *src, jint srcOffset, jint length);

FOUNDATION_EXPORT jboolean ImDiyalogRuntimeCryptoPrimitivesUtilByteStrings_isEqualsWithByteArray_withByteArray_(IOSByteArray *a, IOSByteArray *b);

FOUNDATION_EXPORT jint ImDiyalogRuntimeCryptoPrimitivesUtilByteStrings_compareWithByteArray_withByteArray_(IOSByteArray *a, IOSByteArray *b);

FOUNDATION_EXPORT void ImDiyalogRuntimeCryptoPrimitivesUtilByteStrings_init(ImDiyalogRuntimeCryptoPrimitivesUtilByteStrings *self);

FOUNDATION_EXPORT ImDiyalogRuntimeCryptoPrimitivesUtilByteStrings *new_ImDiyalogRuntimeCryptoPrimitivesUtilByteStrings_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ImDiyalogRuntimeCryptoPrimitivesUtilByteStrings *create_ImDiyalogRuntimeCryptoPrimitivesUtilByteStrings_init();

J2OBJC_TYPE_LITERAL_HEADER(ImDiyalogRuntimeCryptoPrimitivesUtilByteStrings)

#endif


#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_ImDiyalogRuntimeCryptoPrimitivesUtilByteStrings")
