//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/DATA/Diyalog/sdk-core/runtime/runtime-shared/src/main/java/im/diyalog/runtime/mvvm/Value.java
//

@import j2objc;

#pragma push_macro("INCLUDE_ALL_ImDiyalogRuntimeMvvmValue")
#ifdef RESTRICT_ImDiyalogRuntimeMvvmValue
#define INCLUDE_ALL_ImDiyalogRuntimeMvvmValue 0
#else
#define INCLUDE_ALL_ImDiyalogRuntimeMvvmValue 1
#endif
#undef RESTRICT_ImDiyalogRuntimeMvvmValue

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if !defined (ARValue_) && (INCLUDE_ALL_ImDiyalogRuntimeMvvmValue || defined(INCLUDE_ARValue))
#define ARValue_

@protocol ARValueChangedListener;

/*!
 @brief Bindable MVVM Value.
 Used in UI data binding
 */
@interface ARValue : NSObject

#pragma mark Public

/*!
 @brief Default constructor of value
 @param name name of Value
 */
- (instancetype)initWithNSString:(NSString *)name;

/*!
 @brief Get current value
 @return the value
 */
- (id)get;

/*!
 @brief Getting Name of Value
 Useful for debugging current bindings and notifications
 @return name of value
 */
- (NSString *)getName;

/*!
 @brief Subscribe to value updates
 @param listener update listener
 */
- (void)subscribeWithListener:(id<ARValueChangedListener>)listener;

/*!
 @brief Subscribe to value updates
 @param listener update listener
 @param notify   perform notify about current value
 */
- (void)subscribeWithListener:(id<ARValueChangedListener>)listener
                       notify:(jboolean)notify;

/*!
 @brief Remove subscription for updates
 @param listener update listener
 */
- (void)unsubscribeWithListener:(id<ARValueChangedListener>)listener;

#pragma mark Protected

/*!
 @brief Performing notification to subscribers
 @param value new value
 */
- (void)notifyWithId:(id)value;

/*!
 @brief Performing notification to subscribers if we know that we are on mainthread
 Useful for chainging updates from chain of values
 @param value new value
 */
- (void)notifyInMainThreadWithId:(id)value;

@end

J2OBJC_EMPTY_STATIC_INIT(ARValue)

FOUNDATION_EXPORT void ARValue_initWithNSString_(ARValue *self, NSString *name);

J2OBJC_TYPE_LITERAL_HEADER(ARValue)

@compatibility_alias ImDiyalogRuntimeMvvmValue ARValue;

#endif


#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_ImDiyalogRuntimeMvvmValue")
