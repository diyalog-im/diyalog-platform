//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/DATA/Diyalog/sdk-core/runtime/runtime-shared/src/main/java/im/diyalog/runtime/util/ExponentialBackoff.java
//

@import j2objc;

#pragma push_macro("INCLUDE_ALL_ImDiyalogRuntimeUtilExponentialBackoff")
#ifdef RESTRICT_ImDiyalogRuntimeUtilExponentialBackoff
#define INCLUDE_ALL_ImDiyalogRuntimeUtilExponentialBackoff 0
#else
#define INCLUDE_ALL_ImDiyalogRuntimeUtilExponentialBackoff 1
#endif
#undef RESTRICT_ImDiyalogRuntimeUtilExponentialBackoff

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if !defined (ImDiyalogRuntimeUtilExponentialBackoff_) && (INCLUDE_ALL_ImDiyalogRuntimeUtilExponentialBackoff || defined(INCLUDE_ImDiyalogRuntimeUtilExponentialBackoff))
#define ImDiyalogRuntimeUtilExponentialBackoff_

@interface ImDiyalogRuntimeUtilExponentialBackoff : NSObject

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithInt:(jint)minDelay
                    withInt:(jint)maxDelay
                    withInt:(jint)maxFailureCount;

/*!
 @brief Calculating wait duration after failure attempt
 @return wait in ms
 */
- (jlong)exponentialWait;

/*!
 @brief Notification about failure
 */
- (void)onFailure;

/*!
 @brief Notification about success
 */
- (void)onSuccess;

/*!
 @brief Resetting backoff object
 */
- (void)reset;

@end

J2OBJC_EMPTY_STATIC_INIT(ImDiyalogRuntimeUtilExponentialBackoff)

FOUNDATION_EXPORT void ImDiyalogRuntimeUtilExponentialBackoff_init(ImDiyalogRuntimeUtilExponentialBackoff *self);

FOUNDATION_EXPORT ImDiyalogRuntimeUtilExponentialBackoff *new_ImDiyalogRuntimeUtilExponentialBackoff_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ImDiyalogRuntimeUtilExponentialBackoff *create_ImDiyalogRuntimeUtilExponentialBackoff_init();

FOUNDATION_EXPORT void ImDiyalogRuntimeUtilExponentialBackoff_initWithInt_withInt_withInt_(ImDiyalogRuntimeUtilExponentialBackoff *self, jint minDelay, jint maxDelay, jint maxFailureCount);

FOUNDATION_EXPORT ImDiyalogRuntimeUtilExponentialBackoff *new_ImDiyalogRuntimeUtilExponentialBackoff_initWithInt_withInt_withInt_(jint minDelay, jint maxDelay, jint maxFailureCount) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ImDiyalogRuntimeUtilExponentialBackoff *create_ImDiyalogRuntimeUtilExponentialBackoff_initWithInt_withInt_withInt_(jint minDelay, jint maxDelay, jint maxFailureCount);

J2OBJC_TYPE_LITERAL_HEADER(ImDiyalogRuntimeUtilExponentialBackoff)

#endif


#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_ImDiyalogRuntimeUtilExponentialBackoff")
